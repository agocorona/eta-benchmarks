
==================== STG syntax: ====================
2018-02-08 11:48:30.884108 UTC

Control.Concurrent.Fiber.Internal.async2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCG6] (#,#) [s_sCG6 GHC.Tuple.()];
Control.Concurrent.Fiber.Internal.$fMonoid_Fiber3
  :: forall a_a6WE.
     GHC.Base.Monoid a_a6WE =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a6WE #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U,A,A)><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [$dMonoid_sCG7 s_sCG8]
        let {
          sat_sCG9 [Occ=Once] :: a6_a6WE
          [LclId, Str=] =
              \u srt:SRT:[] [] GHC.Base.mempty $dMonoid_sCG7;
        } in  (#,#) [s_sCG8 sat_sCG9];
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
  :: forall a_a61P.
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a61P #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[04B :-> GHC.Err.undefined] [s_sCGA]
        case
            __primcall  eta.fibers.PrimOps.throwEmpty [s_sCGA]
        of
        s1_sCGC [OS=OneShot]
        { __DEFAULT -> (#,#) [s1_sCGC GHC.Err.undefined];
        };
Control.Concurrent.Fiber.Internal.forkFiber1
  :: Control.Concurrent.Fiber.Internal.Fiber ()
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [x_sCGD s_sCGE]
        let {
          sat_sCGL [Occ=Once] :: GHC.Prim.Any
          [LclId, Str=] =
              \r srt:SRT:[] [s1_sCGG]
                  case fork# [x_sCGD s1_sCGG] of _ [Occ=Dead] {
                    (#,#) ipv_sCGI [Occ=Once] ipv1_sCGJ [Occ=Once] ->
                        let {
                          sat_sCGK [Occ=Once] :: GHC.Conc.Sync.ThreadId
                          [LclId, Str=] =
                              NO_CCS GHC.Conc.Sync.ThreadId! [ipv1_sCGJ];
                        } in  (#,#) [ipv_sCGI sat_sCGK];
                  };
        } in 
          __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sCGL
                                                           GHC.Conc.Sync.myThreadId1
                                                           s_sCGE];
Control.Concurrent.Fiber.Internal.catchEmpty2
  :: forall (m_a628 :: * -> *) a_a629.
     GHC.Base.Monad m_a628 =>
     m_a628 a_a629
     -> m_a628 a_a629
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,A><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [$dMonad_sCGM mf_sCGN mg_sCGO s_sCGP]
        __primcall  eta.fibers.PrimOps.alternativeFiber [mf_sCGN
                                                         mg_sCGO
                                                         s_sCGP];
Control.Concurrent.Fiber.Internal.getStack1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Control.Concurrent.Fiber.Internal.Obj #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCGR]
        case
            __primcall  eta.fibers.PrimOps.getStackC [s_sCGR]
        of
        _ [Occ=Dead]
        { (#,#) ipv_sCGU [Occ=Once] ipv1_sCGV [Occ=Once] ->
              let {
                sat_sCGW [Occ=Once] :: Control.Concurrent.Fiber.Internal.Obj
                [LclId, Str=] =
                    NO_CCS Control.Concurrent.Fiber.Internal.Obj! [ipv1_sCGV];
              } in  (#,#) [ipv_sCGU sat_sCGW];
        };
Control.Concurrent.Fiber.Internal.topStack1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCGX]
        case
            __primcall  eta.fibers.PrimOps.topStackC [s_sCGX]
        of
        _ [Occ=Dead]
        { (#,#) ipv_sCH0 [Occ=Once] ipv1_sCH1 [Occ=Once] ->
              let {
                sat_sCH2 [Occ=Once] :: GHC.Types.Int
                [LclId, Str=] =
                    NO_CCS GHC.Types.I#! [ipv1_sCH1];
              } in  (#,#) [ipv_sCH0 sat_sCH2];
        };
Control.Concurrent.Fiber.Internal.delEvent1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCH3]
        case
            __primcall  eta.fibers.PrimOps.delEventCC [s_sCH3]
        of
        s1_sCH5 [OS=OneShot]
        { __DEFAULT -> (#,#) [s1_sCH5 GHC.Tuple.()];
        };
Control.Concurrent.Fiber.Internal.setEvent1
  :: forall a_a642.
     a_a642
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [x_sCH6 s_sCH7]
        case
            __primcall  eta.fibers.PrimOps.setEventC [x_sCH6 s_sCH7]
        of
        s1_sCH9 [OS=OneShot]
        { __DEFAULT -> (#,#) [s1_sCH9 GHC.Tuple.()];
        };
Control.Concurrent.Fiber.Internal.getEvent1
  :: forall a_a5Z3.
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.Maybe a_a5Z3 #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCHA]
        case
            __primcall  eta.fibers.PrimOps.getEventCC [s_sCHA]
        of
        _ [Occ=Dead]
        { (#,,#) ipv_sCHD [Occ=Once*]
                 ipv1_sCHE [Occ=Once!]
                 ipv2_sCHF [Occ=Once] ->
              case ipv1_sCHE of _ [Occ=Dead] {
                __DEFAULT -> (#,#) [ipv_sCHD GHC.Base.Nothing];
                1 ->
                    let {
                      sat_sCHH [Occ=Once] :: GHC.Base.Maybe a6_a5Z3
                      [LclId, Str=] =
                          NO_CCS GHC.Base.Just! [ipv2_sCHF];
                    } in  (#,#) [ipv_sCHD sat_sCHH];
              };
        };
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber2
  :: forall a1_a89V.
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a1_a89V] #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCHI] (#,#) [s_sCHI GHC.Types.[]];
a_rCFV
  :: forall a_a6Q3.
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IORef.IORef (GHC.Base.Maybe a_a6Q3) #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCHJ]
        case newMutVar# [GHC.Base.Nothing s_sCHJ] of _ [Occ=Dead] {
          (#,#) ipv_sCHL [Occ=Once] ipv1_sCHM [Occ=Once] ->
              let {
                sat_sCHN [Occ=Once] :: GHC.IORef.IORef (GHC.Base.Maybe a6_a6Q3)
                [LclId, Str=] =
                    NO_CCS GHC.STRef.STRef! [ipv1_sCHM];
              } in  (#,#) [ipv_sCHL sat_sCHN];
        };
a1_rCFW
  :: forall a_a6Q3 b_a6Q4.
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IORef.IORef (GHC.Base.Maybe (a_a6Q3 -> b_a6Q4)) #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sCHO]
        case newMutVar# [GHC.Base.Nothing s_sCHO] of _ [Occ=Dead] {
          (#,#) ipv_sCHQ [Occ=Once] ipv1_sCHR [Occ=Once] ->
              let {
                sat_sCHS [Occ=Once]
                  :: GHC.IORef.IORef (GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4))
                [LclId, Str=] =
                    NO_CCS GHC.STRef.STRef! [ipv1_sCHR];
              } in  (#,#) [ipv_sCHQ sat_sCHS];
        };
Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
  :: forall a_a6NO b_a6NP.
     Control.Concurrent.Fiber.Internal.Fiber a_a6NO
     -> (a_a6NO -> Control.Concurrent.Fiber.Internal.Fiber b_a6NP)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6NP #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<C(S(SL)),U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [ds_sCHT f_sCHU s_sCHV]
        case
            __primcall  eta.fibers.PrimOps.setCurrentC [ds_sCHT s_sCHV]
        of
        s1_sCHX [OS=OneShot]
        { __DEFAULT ->
              case
                  __primcall  eta.fibers.PrimOps.pushNextC [f_sCHU s1_sCHX]
              of
              s2_sCHZ [OS=OneShot]
              { __DEFAULT ->
                    case ds_sCHT s2_sCHZ of _ [Occ=Dead] {
                      (#,#) ipv_sCI1 [Occ=Once] ipv1_sCI2 [Occ=Once] ->
                          case
                              __primcall  eta.fibers.PrimOps.popNextC [ipv_sCI1]
                          of
                          _ [Occ=Dead]
                          { (#,#) ipv2_sCI5 [Occ=Once] _ [Occ=Dead] ->
                                case f_sCHU ipv1_sCI2 of fa_sCI7 [Dmd=<C(S),U>] {
                                  __DEFAULT ->
                                      case
                                          __primcall  eta.fibers.PrimOps.setCurrentC [fa_sCI7
                                                                                      ipv2_sCI5]
                                      of
                                      s5_sCI9 [OS=OneShot]
                                      { __DEFAULT -> fa_sCI7 s5_sCI9;
                                      };
                                };
                          };
                    };
              };
        };
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber3
  :: forall a_a6P9.
     a_a6P9
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a6P9 #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [a7_sCIA s_sCIB] (#,#) [s_sCIB a7_sCIA];
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
  :: forall a_a6Q3 b_a6Q4.
     Control.Concurrent.Fiber.Internal.Fiber (a_a6Q3 -> b_a6Q4)
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6Q3
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6Q4 #)
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[04B :-> GHC.Err.undefined,
                rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mf_sCIC
                                                                                  mx_sCID
                                                                                  eta_sCIE]
        case
            __primcall  eta.fibers.PrimOps.setCurrentC [a1_rCFW eta_sCIE]
        of
        s1_sCIG [OS=OneShot]
        { __DEFAULT ->
              let-no-escape {
                $sa_sCIH [Occ=Once!]
                  :: GHC.Prim.MutVar#
                       GHC.Prim.RealWorld (GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4))
                     -> GHC.STRef.STRef
                          GHC.Prim.RealWorld (GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4))
                        ~R# GHC.IORef.IORef (GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4))
                     -> GHC.Prim.State# GHC.Prim.RealWorld
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6Q4 #)
                [LclId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
                    sat-only \r srt:SRT:[04B :-> GHC.Err.undefined,
                                         rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [sc_sCII
                                                                                                           sg_sBMA
                                                                                                           sc1_sCIJ]
                        case
                            __primcall  eta.fibers.PrimOps.setCurrentC [a_rCFV sc1_sCIJ]
                        of
                        s2_sCIL [OS=OneShot]
                        { __DEFAULT ->
                              let {
                                a7_sCIM
                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4) #)
                                [LclId, Arity=1, Str=, Unf=OtherCon []] =
                                    \r srt:SRT:[] [eta1_sCIN] readMutVar# [sc_sCII eta1_sCIN];
                              } in 
                                let-no-escape {
                                  $sa1_sCIO [Occ=Once!]
                                    :: GHC.Prim.MutVar# GHC.Prim.RealWorld (GHC.Base.Maybe a6_a6Q3)
                                       -> GHC.STRef.STRef
                                            GHC.Prim.RealWorld (GHC.Base.Maybe a6_a6Q3)
                                          ~R# GHC.IORef.IORef (GHC.Base.Maybe a6_a6Q3)
                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6Q4 #)
                                  [LclId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
                                      sat-only \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                           rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [sc2_sCIP
                                                                                                                             sg1_sBME
                                                                                                                             sc3_sCIQ]
                                          let {
                                            a8_sCIR
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Base.Maybe a6_a6Q3 #)
                                            [LclId, Arity=1, Str=, Unf=OtherCon []] =
                                                \r srt:SRT:[] [eta1_sCIS]
                                                    readMutVar# [sc2_sCIP eta1_sCIS];
                                          } in 
                                            let {
                                              sat_sCMS [Occ=Once]
                                                :: a6_a6Q3
                                                   -> Control.Concurrent.Fiber.Internal.Fiber b_a6Q4
                                              [LclId, Str=] =
                                                  \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                              rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [x_sCKU
                                                                                                                                eta1_sCKV]
                                                      let {
                                                        sat_sCL0 [Occ=Once] :: GHC.Prim.Any
                                                        [LclId, Str=] =
                                                            \r srt:SRT:[] [eta2_sCKX]
                                                                let {
                                                                  sat_sCKY [Occ=Once]
                                                                    :: GHC.Base.Maybe a6_a6Q3
                                                                  [LclId, Str=] =
                                                                      NO_CCS GHC.Base.Just! [x_sCKU];
                                                                } in 
                                                                  case
                                                                      writeMutVar# [sc2_sCIP
                                                                                    sat_sCKY
                                                                                    eta2_sCKX]
                                                                  of
                                                                  s2#_sCKZ [OS=OneShot]
                                                                  { __DEFAULT ->
                                                                        (#,#) [s2#_sCKZ
                                                                               GHC.Tuple.()];
                                                                  };
                                                      } in 
                                                        case
                                                            __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCL0
                                                                                                        eta1_sCKV]
                                                        of
                                                        s3_sCL1 [OS=OneShot]
                                                        { __DEFAULT ->
                                                              let {
                                                                a9_sCL2
                                                                  :: GHC.Base.Maybe
                                                                       (a6_a6Q3 -> b_a6Q4)
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           b_a6Q4 #)
                                                                [LclId,
                                                                 Arity=2,
                                                                 Str=<S,1*U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mf1_sCL3
                                                                                                                                                  eta2_sCL4]
                                                                        case
                                                                            mf1_sCL3
                                                                        of
                                                                        _ [Occ=Dead]
                                                                        { GHC.Base.Nothing ->
                                                                              Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                  eta2_sCL4;
                                                                          GHC.Base.Just f_sCL6 [Occ=Once!] ->
                                                                              let {
                                                                                sat_sCL7 [Occ=Once]
                                                                                  :: b_a6Q4
                                                                                [LclId, Str=] =
                                                                                    \u srt:SRT:[] []
                                                                                        f_sCL6
                                                                                            x_sCKU;
                                                                              } in 
                                                                                (#,#) [eta2_sCL4
                                                                                       sat_sCL7];
                                                                        };
                                                              } in 
                                                                let {
                                                                  sat_sCLU [Occ=Once]
                                                                    :: GHC.Prim.Any
                                                                  [LclId, Str=] =
                                                                      \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCL9
                                                                                                              eta2_sCLA]
                                                                          case
                                                                              __primcall  eta.fibers.PrimOps.setCurrentC [a7_sCIM
                                                                                                                          eta2_sCLA]
                                                                          of
                                                                          s4_sCLC [OS=OneShot]
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __primcall  eta.fibers.PrimOps.pushNextC [a9_sCL2
                                                                                                                              s4_sCLC]
                                                                                of
                                                                                s5_sCLE [OS=OneShot]
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          readMutVar# [sc_sCII
                                                                                                       s5_sCLE]
                                                                                      of
                                                                                      _ [Occ=Dead]
                                                                                      { (#,#) ipv_sCLG [Occ=Once]
                                                                                              ipv1_sCLH ->
                                                                                            case
                                                                                                __primcall  eta.fibers.PrimOps.popNextC [ipv_sCLG]
                                                                                            of
                                                                                            _ [Occ=Dead]
                                                                                            { (#,#) ipv2_sCLK [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  let {
                                                                                                    sat_sCLN [Occ=Once]
                                                                                                      :: GHC.Prim.Any
                                                                                                    [LclId,
                                                                                                     Str=] =
                                                                                                        \u srt:SRT:[] []
                                                                                                            a9_sCL2
                                                                                                                ipv1_sCLH;
                                                                                                  } in 
                                                                                                    case
                                                                                                        __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCLN
                                                                                                                                                    ipv2_sCLK]
                                                                                                    of
                                                                                                    s6_sCLO [OS=OneShot]
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              ipv1_sCLH
                                                                                                          of
                                                                                                          _ [Occ=Dead]
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                case
                                                                                                                    __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCLO]
                                                                                                                of
                                                                                                                s7_sCLR [OS=OneShot]
                                                                                                                { __DEFAULT ->
                                                                                                                      (#,#) [s7_sCLR
                                                                                                                             GHC.Err.undefined];
                                                                                                                };
                                                                                                            GHC.Base.Just f_sCLS [Occ=Once!] ->
                                                                                                                let {
                                                                                                                  sat_sCLT [Occ=Once]
                                                                                                                    :: b_a6Q4
                                                                                                                  [LclId,
                                                                                                                   Str=] =
                                                                                                                      \u srt:SRT:[] []
                                                                                                                          f_sCLS
                                                                                                                              x_sCKU;
                                                                                                                } in 
                                                                                                                  (#,#) [s6_sCLO
                                                                                                                         sat_sCLT];
                                                                                                          };
                                                                                                    };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                } in 
                                                                  case
                                                                      __primcall  eta.fibers.PrimOps.pushNextC [sat_sCLU
                                                                                                                s3_sCL1]
                                                                  of
                                                                  s4_sCLV [OS=OneShot]
                                                                  { __DEFAULT ->
                                                                        let {
                                                                          sat_sCLW [Occ=Once]
                                                                            :: GHC.Base.Maybe
                                                                                 a6_a6Q3
                                                                          [LclId, Str=] =
                                                                              NO_CCS GHC.Base.Just! [x_sCKU];
                                                                        } in 
                                                                          case
                                                                              writeMutVar# [sc2_sCIP
                                                                                            sat_sCLW
                                                                                            s4_sCLV]
                                                                          of
                                                                          s2#_sCLX [OS=OneShot]
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __primcall  eta.fibers.PrimOps.popNextC [s2#_sCLX]
                                                                                of
                                                                                _ [Occ=Dead]
                                                                                { (#,#) ipv_sCM0 [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      let {
                                                                                        sat_sCM3 [Occ=Once]
                                                                                          :: GHC.Prim.Any
                                                                                        [LclId,
                                                                                         Str=] =
                                                                                            \u srt:SRT:[] []
                                                                                                Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                    a7_sCIM
                                                                                                    a9_sCL2;
                                                                                      } in 
                                                                                        case
                                                                                            __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCM3
                                                                                                                                        ipv_sCM0]
                                                                                        of
                                                                                        s5_sCM4 [OS=OneShot]
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  __primcall  eta.fibers.PrimOps.setCurrentC [a7_sCIM
                                                                                                                                              s5_sCM4]
                                                                                              of
                                                                                              s6_sCM6 [OS=OneShot]
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        __primcall  eta.fibers.PrimOps.pushNextC [a9_sCL2
                                                                                                                                                  s6_sCM6]
                                                                                                    of
                                                                                                    s7_sCM8 [OS=OneShot]
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              readMutVar# [sc_sCII
                                                                                                                           s7_sCM8]
                                                                                                          of
                                                                                                          _ [Occ=Dead]
                                                                                                          { (#,#) ipv2_sCMA [Occ=Once]
                                                                                                                  ipv3_sCMB ->
                                                                                                                case
                                                                                                                    __primcall  eta.fibers.PrimOps.popNextC [ipv2_sCMA]
                                                                                                                of
                                                                                                                _ [Occ=Dead]
                                                                                                                { (#,#) ipv4_sCME [Occ=Once]
                                                                                                                        _ [Occ=Dead] ->
                                                                                                                      let {
                                                                                                                        sat_sCML [Occ=Once]
                                                                                                                          :: GHC.Prim.Any
                                                                                                                        [LclId,
                                                                                                                         Str=] =
                                                                                                                            \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta2_sCMH]
                                                                                                                                case
                                                                                                                                    ipv3_sCMB
                                                                                                                                of
                                                                                                                                _ [Occ=Dead]
                                                                                                                                { GHC.Base.Nothing ->
                                                                                                                                      Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                          eta2_sCMH;
                                                                                                                                  GHC.Base.Just f_sCMJ [Occ=Once!] ->
                                                                                                                                      let {
                                                                                                                                        sat_sCMK [Occ=Once]
                                                                                                                                          :: b_a6Q4
                                                                                                                                        [LclId,
                                                                                                                                         Str=] =
                                                                                                                                            \u srt:SRT:[] []
                                                                                                                                                f_sCMJ
                                                                                                                                                    x_sCKU;
                                                                                                                                      } in 
                                                                                                                                        (#,#) [eta2_sCMH
                                                                                                                                               sat_sCMK];
                                                                                                                                };
                                                                                                                      } in 
                                                                                                                        case
                                                                                                                            __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCML
                                                                                                                                                                        ipv4_sCME]
                                                                                                                        of
                                                                                                                        s8_sCMM [OS=OneShot]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  ipv3_sCMB
                                                                                                                              of
                                                                                                                              _ [Occ=Dead]
                                                                                                                              { GHC.Base.Nothing ->
                                                                                                                                    case
                                                                                                                                        __primcall  eta.fibers.PrimOps.throwEmpty [s8_sCMM]
                                                                                                                                    of
                                                                                                                                    s9_sCMP [OS=OneShot]
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          (#,#) [s9_sCMP
                                                                                                                                                 GHC.Err.undefined];
                                                                                                                                    };
                                                                                                                                GHC.Base.Just f_sCMQ [Occ=Once!] ->
                                                                                                                                    let {
                                                                                                                                      sat_sCMR [Occ=Once]
                                                                                                                                        :: b_a6Q4
                                                                                                                                      [LclId,
                                                                                                                                       Str=] =
                                                                                                                                          \u srt:SRT:[] []
                                                                                                                                              f_sCMQ
                                                                                                                                                  x_sCKU;
                                                                                                                                    } in 
                                                                                                                                      (#,#) [s8_sCMM
                                                                                                                                             sat_sCMR];
                                                                                                                              };
                                                                                                                        };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                };
                                                                          };
                                                                  };
                                                        }; } in
                                            let {
                                              sat_sCMT [Occ=Once] :: GHC.Prim.Any
                                              [LclId, Str=] =
                                                  \u srt:SRT:[] []
                                                      Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                          mx_sCID sat_sCMS;
                                            } in 
                                              let {
                                                sat_sCKS [Occ=Once]
                                                  :: (a6_a6Q3 -> b_a6Q4)
                                                     -> Control.Concurrent.Fiber.Internal.Fiber
                                                          b_a6Q4
                                                [LclId, Str=] =
                                                    \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                                rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [f_sCIU
                                                                                                                                  eta1_sCIV]
                                                        let {
                                                          sat_sCJ0 [Occ=Once] :: GHC.Prim.Any
                                                          [LclId, Str=] =
                                                              \r srt:SRT:[] [eta2_sCIX]
                                                                  let {
                                                                    sat_sCIY [Occ=Once]
                                                                      :: GHC.Base.Maybe
                                                                           (a6_a6Q3 -> b_a6Q4)
                                                                    [LclId, Str=] =
                                                                        NO_CCS GHC.Base.Just! [f_sCIU];
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [sc_sCII
                                                                                      sat_sCIY
                                                                                      eta2_sCIX]
                                                                    of
                                                                    s2#_sCIZ [OS=OneShot]
                                                                    { __DEFAULT ->
                                                                          (#,#) [s2#_sCIZ
                                                                                 GHC.Tuple.()];
                                                                    };
                                                        } in 
                                                          case
                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCJ0
                                                                                                          eta1_sCIV]
                                                          of
                                                          s3_sCJ1 [OS=OneShot]
                                                          { __DEFAULT ->
                                                                let {
                                                                  a9_sCJ2
                                                                    :: GHC.Base.Maybe a6_a6Q3
                                                                       -> GHC.Prim.State#
                                                                            GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             b_a6Q4 #)
                                                                  [LclId,
                                                                   Arity=2,
                                                                   Str=<S,1*U><S,U> {a4S4-><L,1*C1(U)>},
                                                                   Unf=OtherCon []] =
                                                                      \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mx1_sCJ3
                                                                                                                                                    eta2_sCJ4]
                                                                          case
                                                                              mx1_sCJ3
                                                                          of
                                                                          _ [Occ=Dead]
                                                                          { GHC.Base.Nothing ->
                                                                                Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                    eta2_sCJ4;
                                                                            GHC.Base.Just x_sCJ6 [Occ=Once] ->
                                                                                let {
                                                                                  sat_sCJ7 [Occ=Once]
                                                                                    :: b_a6Q4
                                                                                  [LclId, Str=] =
                                                                                      \u srt:SRT:[] []
                                                                                          f_sCIU
                                                                                              x_sCJ6;
                                                                                } in 
                                                                                  (#,#) [eta2_sCJ4
                                                                                         sat_sCJ7];
                                                                          };
                                                                } in 
                                                                  let {
                                                                    sat_sCJU [Occ=Once]
                                                                      :: GHC.Prim.Any
                                                                    [LclId, Str=] =
                                                                        \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCJ9
                                                                                                                eta2_sCJA]
                                                                            case
                                                                                __primcall  eta.fibers.PrimOps.setCurrentC [a8_sCIR
                                                                                                                            eta2_sCJA]
                                                                            of
                                                                            s4_sCJC [OS=OneShot]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __primcall  eta.fibers.PrimOps.pushNextC [a9_sCJ2
                                                                                                                                s4_sCJC]
                                                                                  of
                                                                                  s5_sCJE [OS=OneShot]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            readMutVar# [sc2_sCIP
                                                                                                         s5_sCJE]
                                                                                        of
                                                                                        _ [Occ=Dead]
                                                                                        { (#,#) ipv_sCJG [Occ=Once]
                                                                                                ipv1_sCJH ->
                                                                                              case
                                                                                                  __primcall  eta.fibers.PrimOps.popNextC [ipv_sCJG]
                                                                                              of
                                                                                              _ [Occ=Dead]
                                                                                              { (#,#) ipv2_sCJK [Occ=Once]
                                                                                                      _ [Occ=Dead] ->
                                                                                                    let {
                                                                                                      sat_sCJN [Occ=Once]
                                                                                                        :: GHC.Prim.Any
                                                                                                      [LclId,
                                                                                                       Str=] =
                                                                                                          \u srt:SRT:[] []
                                                                                                              a9_sCJ2
                                                                                                                  ipv1_sCJH;
                                                                                                    } in 
                                                                                                      case
                                                                                                          __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCJN
                                                                                                                                                      ipv2_sCJK]
                                                                                                      of
                                                                                                      s6_sCJO [OS=OneShot]
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                ipv1_sCJH
                                                                                                            of
                                                                                                            _ [Occ=Dead]
                                                                                                            { GHC.Base.Nothing ->
                                                                                                                  case
                                                                                                                      __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCJO]
                                                                                                                  of
                                                                                                                  s7_sCJR [OS=OneShot]
                                                                                                                  { __DEFAULT ->
                                                                                                                        (#,#) [s7_sCJR
                                                                                                                               GHC.Err.undefined];
                                                                                                                  };
                                                                                                              GHC.Base.Just x_sCJS [Occ=Once] ->
                                                                                                                  let {
                                                                                                                    sat_sCJT [Occ=Once]
                                                                                                                      :: b_a6Q4
                                                                                                                    [LclId,
                                                                                                                     Str=] =
                                                                                                                        \u srt:SRT:[] []
                                                                                                                            f_sCIU
                                                                                                                                x_sCJS;
                                                                                                                  } in 
                                                                                                                    (#,#) [s6_sCJO
                                                                                                                           sat_sCJT];
                                                                                                            };
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                  } in 
                                                                    case
                                                                        __primcall  eta.fibers.PrimOps.pushNextC [sat_sCJU
                                                                                                                  s3_sCJ1]
                                                                    of
                                                                    s4_sCJV [OS=OneShot]
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sCJW [Occ=Once]
                                                                              :: GHC.Base.Maybe
                                                                                   (a6_a6Q3
                                                                                    -> b_a6Q4)
                                                                            [LclId, Str=] =
                                                                                NO_CCS GHC.Base.Just! [f_sCIU];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [sc_sCII
                                                                                              sat_sCJW
                                                                                              s4_sCJV]
                                                                            of
                                                                            s2#_sCJX [OS=OneShot]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __primcall  eta.fibers.PrimOps.popNextC [s2#_sCJX]
                                                                                  of
                                                                                  _ [Occ=Dead]
                                                                                  { (#,#) ipv_sCK0 [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                                        let {
                                                                                          sat_sCK3 [Occ=Once]
                                                                                            :: GHC.Prim.Any
                                                                                          [LclId,
                                                                                           Str=] =
                                                                                              \u srt:SRT:[] []
                                                                                                  Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                      a8_sCIR
                                                                                                      a9_sCJ2;
                                                                                        } in 
                                                                                          case
                                                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCK3
                                                                                                                                          ipv_sCK0]
                                                                                          of
                                                                                          s5_sCK4 [OS=OneShot]
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __primcall  eta.fibers.PrimOps.setCurrentC [a8_sCIR
                                                                                                                                                s5_sCK4]
                                                                                                of
                                                                                                s6_sCK6 [OS=OneShot]
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __primcall  eta.fibers.PrimOps.pushNextC [a9_sCJ2
                                                                                                                                                    s6_sCK6]
                                                                                                      of
                                                                                                      s7_sCK8 [OS=OneShot]
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                readMutVar# [sc2_sCIP
                                                                                                                             s7_sCK8]
                                                                                                            of
                                                                                                            _ [Occ=Dead]
                                                                                                            { (#,#) ipv2_sCKA [Occ=Once]
                                                                                                                    ipv3_sCKB ->
                                                                                                                  case
                                                                                                                      __primcall  eta.fibers.PrimOps.popNextC [ipv2_sCKA]
                                                                                                                  of
                                                                                                                  _ [Occ=Dead]
                                                                                                                  { (#,#) ipv4_sCKE [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        let {
                                                                                                                          sat_sCKL [Occ=Once]
                                                                                                                            :: GHC.Prim.Any
                                                                                                                          [LclId,
                                                                                                                           Str=] =
                                                                                                                              \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta2_sCKH]
                                                                                                                                  case
                                                                                                                                      ipv3_sCKB
                                                                                                                                  of
                                                                                                                                  _ [Occ=Dead]
                                                                                                                                  { GHC.Base.Nothing ->
                                                                                                                                        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                            eta2_sCKH;
                                                                                                                                    GHC.Base.Just x_sCKJ [Occ=Once] ->
                                                                                                                                        let {
                                                                                                                                          sat_sCKK [Occ=Once]
                                                                                                                                            :: b_a6Q4
                                                                                                                                          [LclId,
                                                                                                                                           Str=] =
                                                                                                                                              \u srt:SRT:[] []
                                                                                                                                                  f_sCIU
                                                                                                                                                      x_sCKJ;
                                                                                                                                        } in 
                                                                                                                                          (#,#) [eta2_sCKH
                                                                                                                                                 sat_sCKK];
                                                                                                                                  };
                                                                                                                        } in 
                                                                                                                          case
                                                                                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCKL
                                                                                                                                                                          ipv4_sCKE]
                                                                                                                          of
                                                                                                                          s8_sCKM [OS=OneShot]
                                                                                                                          { __DEFAULT ->
                                                                                                                                case
                                                                                                                                    ipv3_sCKB
                                                                                                                                of
                                                                                                                                _ [Occ=Dead]
                                                                                                                                { GHC.Base.Nothing ->
                                                                                                                                      case
                                                                                                                                          __primcall  eta.fibers.PrimOps.throwEmpty [s8_sCKM]
                                                                                                                                      of
                                                                                                                                      s9_sCKP [OS=OneShot]
                                                                                                                                      { __DEFAULT ->
                                                                                                                                            (#,#) [s9_sCKP
                                                                                                                                                   GHC.Err.undefined];
                                                                                                                                      };
                                                                                                                                  GHC.Base.Just x_sCKQ [Occ=Once] ->
                                                                                                                                      let {
                                                                                                                                        sat_sCKR [Occ=Once]
                                                                                                                                          :: b_a6Q4
                                                                                                                                        [LclId,
                                                                                                                                         Str=] =
                                                                                                                                            \u srt:SRT:[] []
                                                                                                                                                f_sCIU
                                                                                                                                                    x_sCKQ;
                                                                                                                                      } in 
                                                                                                                                        (#,#) [s8_sCKM
                                                                                                                                               sat_sCKR];
                                                                                                                                };
                                                                                                                          };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                  };
                                                                            };
                                                                    };
                                                          }; } in
                                              let {
                                                sat_sCKT [Occ=Once] :: GHC.Prim.Any
                                                [LclId, Str=] =
                                                    \u srt:SRT:[] []
                                                        Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                            mf_sCIC sat_sCKS;
                                              } in 
                                                __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sCKT
                                                                                                 sat_sCMT
                                                                                                 sc3_sCIQ];
                                } in 
                                  let {
                                    a8_sCMU
                                      :: GHC.IORef.IORef (GHC.Base.Maybe a6_a6Q3)
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6Q4 #)
                                    [LclId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
                                        \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                    rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [r2_sCMV
                                                                                                                      eta1_sCMW]
                                            let {
                                              a9_sCMX
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Base.Maybe a6_a6Q3 #)
                                              [LclId, Arity=1, Str=, Unf=OtherCon []] =
                                                  \r srt:SRT:[] [eta_B1]
                                                      GHC.STRef.readSTRef1 r2_sCMV eta_B1;
                                            } in 
                                              let {
                                                sat_sCR5 [Occ=Once]
                                                  :: a6_a6Q3
                                                     -> Control.Concurrent.Fiber.Internal.Fiber
                                                          b_a6Q4
                                                [LclId, Str=] =
                                                    \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                                rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [x_sCP3
                                                                                                                                  eta2_sCP4]
                                                        let {
                                                          sat_sCPB [Occ=Once] :: GHC.Prim.Any
                                                          [LclId, Str=] =
                                                              \r srt:SRT:[] [eta3_sCP6]
                                                                  case r2_sCMV of _ [Occ=Dead] {
                                                                    GHC.STRef.STRef var#_sCP8 [Occ=Once] ->
                                                                        let {
                                                                          sat_sCP9 [Occ=Once]
                                                                            :: GHC.Base.Maybe
                                                                                 a6_a6Q3
                                                                          [LclId, Str=] =
                                                                              NO_CCS GHC.Base.Just! [x_sCP3];
                                                                        } in 
                                                                          case
                                                                              writeMutVar# [var#_sCP8
                                                                                            sat_sCP9
                                                                                            eta3_sCP6]
                                                                          of
                                                                          s2#_sCPA [OS=OneShot]
                                                                          { __DEFAULT ->
                                                                                (#,#) [s2#_sCPA
                                                                                       GHC.Tuple.()];
                                                                          };
                                                                  };
                                                        } in 
                                                          case
                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCPB
                                                                                                          eta2_sCP4]
                                                          of
                                                          s3_sCPC [OS=OneShot]
                                                          { __DEFAULT ->
                                                                let {
                                                                  a10_sCPD
                                                                    :: GHC.Base.Maybe
                                                                         (a6_a6Q3 -> b_a6Q4)
                                                                       -> GHC.Prim.State#
                                                                            GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             b_a6Q4 #)
                                                                  [LclId,
                                                                   Arity=2,
                                                                   Str=<S,1*U><S,U>,
                                                                   Unf=OtherCon []] =
                                                                      \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mf1_sCPE
                                                                                                                                                    eta3_sCPF]
                                                                          case
                                                                              mf1_sCPE
                                                                          of
                                                                          _ [Occ=Dead]
                                                                          { GHC.Base.Nothing ->
                                                                                Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                    eta3_sCPF;
                                                                            GHC.Base.Just f_sCPH [Occ=Once!] ->
                                                                                let {
                                                                                  sat_sCPI [Occ=Once]
                                                                                    :: b_a6Q4
                                                                                  [LclId, Str=] =
                                                                                      \u srt:SRT:[] []
                                                                                          f_sCPH
                                                                                              x_sCP3;
                                                                                } in 
                                                                                  (#,#) [eta3_sCPF
                                                                                         sat_sCPI];
                                                                          };
                                                                } in 
                                                                  let {
                                                                    sat_sCQ5 [Occ=Once]
                                                                      :: GHC.Prim.Any
                                                                    [LclId, Str=] =
                                                                        \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCPK
                                                                                                                eta3_sCPL]
                                                                            case
                                                                                __primcall  eta.fibers.PrimOps.setCurrentC [a7_sCIM
                                                                                                                            eta3_sCPL]
                                                                            of
                                                                            s4_sCPN [OS=OneShot]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __primcall  eta.fibers.PrimOps.pushNextC [a10_sCPD
                                                                                                                                s4_sCPN]
                                                                                  of
                                                                                  s5_sCPP [OS=OneShot]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            readMutVar# [sc_sCII
                                                                                                         s5_sCPP]
                                                                                        of
                                                                                        _ [Occ=Dead]
                                                                                        { (#,#) ipv_sCPR [Occ=Once]
                                                                                                ipv1_sCPS ->
                                                                                              case
                                                                                                  __primcall  eta.fibers.PrimOps.popNextC [ipv_sCPR]
                                                                                              of
                                                                                              _ [Occ=Dead]
                                                                                              { (#,#) ipv2_sCPV [Occ=Once]
                                                                                                      _ [Occ=Dead] ->
                                                                                                    let {
                                                                                                      sat_sCPY [Occ=Once]
                                                                                                        :: GHC.Prim.Any
                                                                                                      [LclId,
                                                                                                       Str=] =
                                                                                                          \u srt:SRT:[] []
                                                                                                              a10_sCPD
                                                                                                                  ipv1_sCPS;
                                                                                                    } in 
                                                                                                      case
                                                                                                          __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCPY
                                                                                                                                                      ipv2_sCPV]
                                                                                                      of
                                                                                                      s6_sCPZ [OS=OneShot]
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                ipv1_sCPS
                                                                                                            of
                                                                                                            _ [Occ=Dead]
                                                                                                            { GHC.Base.Nothing ->
                                                                                                                  case
                                                                                                                      __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCPZ]
                                                                                                                  of
                                                                                                                  s7_sCQ2 [OS=OneShot]
                                                                                                                  { __DEFAULT ->
                                                                                                                        (#,#) [s7_sCQ2
                                                                                                                               GHC.Err.undefined];
                                                                                                                  };
                                                                                                              GHC.Base.Just f_sCQ3 [Occ=Once!] ->
                                                                                                                  let {
                                                                                                                    sat_sCQ4 [Occ=Once]
                                                                                                                      :: b_a6Q4
                                                                                                                    [LclId,
                                                                                                                     Str=] =
                                                                                                                        \u srt:SRT:[] []
                                                                                                                            f_sCQ3
                                                                                                                                x_sCP3;
                                                                                                                  } in 
                                                                                                                    (#,#) [s6_sCPZ
                                                                                                                           sat_sCQ4];
                                                                                                            };
                                                                                                      };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                  } in 
                                                                    case
                                                                        __primcall  eta.fibers.PrimOps.pushNextC [sat_sCQ5
                                                                                                                  s3_sCPC]
                                                                    of
                                                                    s4_sCQ6 [OS=OneShot]
                                                                    { __DEFAULT ->
                                                                          case
                                                                              r2_sCMV
                                                                          of
                                                                          _ [Occ=Dead]
                                                                          { GHC.STRef.STRef var#_sCQ8 [Occ=Once] ->
                                                                                let {
                                                                                  sat_sCQ9 [Occ=Once]
                                                                                    :: GHC.Base.Maybe
                                                                                         a6_a6Q3
                                                                                  [LclId, Str=] =
                                                                                      NO_CCS GHC.Base.Just! [x_sCP3];
                                                                                } in 
                                                                                  case
                                                                                      writeMutVar# [var#_sCQ8
                                                                                                    sat_sCQ9
                                                                                                    s4_sCQ6]
                                                                                  of
                                                                                  s2#_sCQA [OS=OneShot]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            __primcall  eta.fibers.PrimOps.popNextC [s2#_sCQA]
                                                                                        of
                                                                                        _ [Occ=Dead]
                                                                                        { (#,#) ipv_sCQD [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                              let {
                                                                                                sat_sCQG [Occ=Once]
                                                                                                  :: GHC.Prim.Any
                                                                                                [LclId,
                                                                                                 Str=] =
                                                                                                    \u srt:SRT:[] []
                                                                                                        Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                            a7_sCIM
                                                                                                            a10_sCPD;
                                                                                              } in 
                                                                                                case
                                                                                                    __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCQG
                                                                                                                                                ipv_sCQD]
                                                                                                of
                                                                                                s5_sCQH [OS=OneShot]
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __primcall  eta.fibers.PrimOps.setCurrentC [a7_sCIM
                                                                                                                                                      s5_sCQH]
                                                                                                      of
                                                                                                      s6_sCQJ [OS=OneShot]
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __primcall  eta.fibers.PrimOps.pushNextC [a10_sCPD
                                                                                                                                                          s6_sCQJ]
                                                                                                            of
                                                                                                            s7_sCQL [OS=OneShot]
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      readMutVar# [sc_sCII
                                                                                                                                   s7_sCQL]
                                                                                                                  of
                                                                                                                  _ [Occ=Dead]
                                                                                                                  { (#,#) ipv2_sCQN [Occ=Once]
                                                                                                                          ipv3_sCQO ->
                                                                                                                        case
                                                                                                                            __primcall  eta.fibers.PrimOps.popNextC [ipv2_sCQN]
                                                                                                                        of
                                                                                                                        _ [Occ=Dead]
                                                                                                                        { (#,#) ipv4_sCQR [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              let {
                                                                                                                                sat_sCQY [Occ=Once]
                                                                                                                                  :: GHC.Prim.Any
                                                                                                                                [LclId,
                                                                                                                                 Str=] =
                                                                                                                                    \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta3_sCQU]
                                                                                                                                        case
                                                                                                                                            ipv3_sCQO
                                                                                                                                        of
                                                                                                                                        _ [Occ=Dead]
                                                                                                                                        { GHC.Base.Nothing ->
                                                                                                                                              Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                                  eta3_sCQU;
                                                                                                                                          GHC.Base.Just f_sCQW [Occ=Once!] ->
                                                                                                                                              let {
                                                                                                                                                sat_sCQX [Occ=Once]
                                                                                                                                                  :: b_a6Q4
                                                                                                                                                [LclId,
                                                                                                                                                 Str=] =
                                                                                                                                                    \u srt:SRT:[] []
                                                                                                                                                        f_sCQW
                                                                                                                                                            x_sCP3;
                                                                                                                                              } in 
                                                                                                                                                (#,#) [eta3_sCQU
                                                                                                                                                       sat_sCQX];
                                                                                                                                        };
                                                                                                                              } in 
                                                                                                                                case
                                                                                                                                    __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCQY
                                                                                                                                                                                ipv4_sCQR]
                                                                                                                                of
                                                                                                                                s8_sCQZ [OS=OneShot]
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          ipv3_sCQO
                                                                                                                                      of
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      { GHC.Base.Nothing ->
                                                                                                                                            case
                                                                                                                                                __primcall  eta.fibers.PrimOps.throwEmpty [s8_sCQZ]
                                                                                                                                            of
                                                                                                                                            s9_sCR2 [OS=OneShot]
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  (#,#) [s9_sCR2
                                                                                                                                                         GHC.Err.undefined];
                                                                                                                                            };
                                                                                                                                        GHC.Base.Just f_sCR3 [Occ=Once!] ->
                                                                                                                                            let {
                                                                                                                                              sat_sCR4 [Occ=Once]
                                                                                                                                                :: b_a6Q4
                                                                                                                                              [LclId,
                                                                                                                                               Str=] =
                                                                                                                                                  \u srt:SRT:[] []
                                                                                                                                                      f_sCR3
                                                                                                                                                          x_sCP3;
                                                                                                                                            } in 
                                                                                                                                              (#,#) [s8_sCQZ
                                                                                                                                                     sat_sCR4];
                                                                                                                                      };
                                                                                                                                };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                        };
                                                                                  };
                                                                          };
                                                                    };
                                                          }; } in
                                              let {
                                                sat_sCR6 [Occ=Once] :: GHC.Prim.Any
                                                [LclId, Str=] =
                                                    \u srt:SRT:[] []
                                                        Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                            mx_sCID sat_sCR5;
                                              } in 
                                                let {
                                                  sat_sCP1 [Occ=Once]
                                                    :: (a6_a6Q3 -> b_a6Q4)
                                                       -> Control.Concurrent.Fiber.Internal.Fiber
                                                            b_a6Q4
                                                  [LclId, Str=] =
                                                      \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                                  rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [f_sCMZ
                                                                                                                                    eta2_sCN0]
                                                          let {
                                                            sat_sCN5 [Occ=Once] :: GHC.Prim.Any
                                                            [LclId, Str=] =
                                                                \r srt:SRT:[] [eta3_sCN2]
                                                                    let {
                                                                      sat_sCN3 [Occ=Once]
                                                                        :: GHC.Base.Maybe
                                                                             (a6_a6Q3 -> b_a6Q4)
                                                                      [LclId, Str=] =
                                                                          NO_CCS GHC.Base.Just! [f_sCMZ];
                                                                    } in 
                                                                      case
                                                                          writeMutVar# [sc_sCII
                                                                                        sat_sCN3
                                                                                        eta3_sCN2]
                                                                      of
                                                                      s2#_sCN4 [OS=OneShot]
                                                                      { __DEFAULT ->
                                                                            (#,#) [s2#_sCN4
                                                                                   GHC.Tuple.()];
                                                                      };
                                                          } in 
                                                            case
                                                                __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCN5
                                                                                                            eta2_sCN0]
                                                            of
                                                            s3_sCN6 [OS=OneShot]
                                                            { __DEFAULT ->
                                                                  let {
                                                                    a10_sCN7
                                                                      :: GHC.Base.Maybe a6_a6Q3
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               b_a6Q4 #)
                                                                    [LclId,
                                                                     Arity=2,
                                                                     Str=<S,1*U><S,U> {a4S4-><L,1*C1(U)>},
                                                                     Unf=OtherCon []] =
                                                                        \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mx1_sCN8
                                                                                                                                                      eta3_sCN9]
                                                                            case
                                                                                mx1_sCN8
                                                                            of
                                                                            _ [Occ=Dead]
                                                                            { GHC.Base.Nothing ->
                                                                                  Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                      eta3_sCN9;
                                                                              GHC.Base.Just x_sCNB [Occ=Once] ->
                                                                                  let {
                                                                                    sat_sCNC [Occ=Once]
                                                                                      :: b_a6Q4
                                                                                    [LclId, Str=] =
                                                                                        \u srt:SRT:[] []
                                                                                            f_sCMZ
                                                                                                x_sCNB;
                                                                                  } in 
                                                                                    (#,#) [eta3_sCN9
                                                                                           sat_sCNC];
                                                                            };
                                                                  } in 
                                                                    let {
                                                                      sat_sCO1 [Occ=Once]
                                                                        :: GHC.Prim.Any
                                                                      [LclId, Str=] =
                                                                          \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCNE
                                                                                                                  eta3_sCNF]
                                                                              case
                                                                                  __primcall  eta.fibers.PrimOps.setCurrentC [a9_sCMX
                                                                                                                              eta3_sCNF]
                                                                              of
                                                                              s4_sCNH [OS=OneShot]
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __primcall  eta.fibers.PrimOps.pushNextC [a10_sCN7
                                                                                                                                  s4_sCNH]
                                                                                    of
                                                                                    s5_sCNJ [OS=OneShot]
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              r2_sCMV
                                                                                          of
                                                                                          _ [Occ=Dead]
                                                                                          { GHC.STRef.STRef var#_sCNL [Occ=Once] ->
                                                                                                case
                                                                                                    readMutVar# [var#_sCNL
                                                                                                                 s5_sCNJ]
                                                                                                of
                                                                                                _ [Occ=Dead]
                                                                                                { (#,#) ipv_sCNN [Occ=Once]
                                                                                                        ipv1_sCNO ->
                                                                                                      case
                                                                                                          __primcall  eta.fibers.PrimOps.popNextC [ipv_sCNN]
                                                                                                      of
                                                                                                      _ [Occ=Dead]
                                                                                                      { (#,#) ipv2_sCNR [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            let {
                                                                                                              sat_sCNU [Occ=Once]
                                                                                                                :: GHC.Prim.Any
                                                                                                              [LclId,
                                                                                                               Str=] =
                                                                                                                  \u srt:SRT:[] []
                                                                                                                      a10_sCN7
                                                                                                                          ipv1_sCNO;
                                                                                                            } in 
                                                                                                              case
                                                                                                                  __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCNU
                                                                                                                                                              ipv2_sCNR]
                                                                                                              of
                                                                                                              s6_sCNV [OS=OneShot]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        ipv1_sCNO
                                                                                                                    of
                                                                                                                    _ [Occ=Dead]
                                                                                                                    { GHC.Base.Nothing ->
                                                                                                                          case
                                                                                                                              __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCNV]
                                                                                                                          of
                                                                                                                          s7_sCNY [OS=OneShot]
                                                                                                                          { __DEFAULT ->
                                                                                                                                (#,#) [s7_sCNY
                                                                                                                                       GHC.Err.undefined];
                                                                                                                          };
                                                                                                                      GHC.Base.Just x_sCNZ [Occ=Once] ->
                                                                                                                          let {
                                                                                                                            sat_sCO0 [Occ=Once]
                                                                                                                              :: b_a6Q4
                                                                                                                            [LclId,
                                                                                                                             Str=] =
                                                                                                                                \u srt:SRT:[] []
                                                                                                                                    f_sCMZ
                                                                                                                                        x_sCNZ;
                                                                                                                          } in 
                                                                                                                            (#,#) [s6_sCNV
                                                                                                                                   sat_sCO0];
                                                                                                                    };
                                                                                                              };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          __primcall  eta.fibers.PrimOps.pushNextC [sat_sCO1
                                                                                                                    s3_sCN6]
                                                                      of
                                                                      s4_sCO2 [OS=OneShot]
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_sCO3 [Occ=Once]
                                                                                :: GHC.Base.Maybe
                                                                                     (a6_a6Q3
                                                                                      -> b_a6Q4)
                                                                              [LclId, Str=] =
                                                                                  NO_CCS GHC.Base.Just! [f_sCMZ];
                                                                            } in 
                                                                              case
                                                                                  writeMutVar# [sc_sCII
                                                                                                sat_sCO3
                                                                                                s4_sCO2]
                                                                              of
                                                                              s2#_sCO4 [OS=OneShot]
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __primcall  eta.fibers.PrimOps.popNextC [s2#_sCO4]
                                                                                    of
                                                                                    _ [Occ=Dead]
                                                                                    { (#,#) ipv_sCO7 [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          let {
                                                                                            sat_sCOA [Occ=Once]
                                                                                              :: GHC.Prim.Any
                                                                                            [LclId,
                                                                                             Str=] =
                                                                                                \u srt:SRT:[] []
                                                                                                    Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                        a9_sCMX
                                                                                                        a10_sCN7;
                                                                                          } in 
                                                                                            case
                                                                                                __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCOA
                                                                                                                                            ipv_sCO7]
                                                                                            of
                                                                                            s5_sCOB [OS=OneShot]
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      __primcall  eta.fibers.PrimOps.setCurrentC [a9_sCMX
                                                                                                                                                  s5_sCOB]
                                                                                                  of
                                                                                                  s6_sCOD [OS=OneShot]
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __primcall  eta.fibers.PrimOps.pushNextC [a10_sCN7
                                                                                                                                                      s6_sCOD]
                                                                                                        of
                                                                                                        s7_sCOF [OS=OneShot]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  r2_sCMV
                                                                                                              of
                                                                                                              _ [Occ=Dead]
                                                                                                              { GHC.STRef.STRef var#_sCOH [Occ=Once] ->
                                                                                                                    case
                                                                                                                        readMutVar# [var#_sCOH
                                                                                                                                     s7_sCOF]
                                                                                                                    of
                                                                                                                    _ [Occ=Dead]
                                                                                                                    { (#,#) ipv2_sCOJ [Occ=Once]
                                                                                                                            ipv3_sCOK ->
                                                                                                                          case
                                                                                                                              __primcall  eta.fibers.PrimOps.popNextC [ipv2_sCOJ]
                                                                                                                          of
                                                                                                                          _ [Occ=Dead]
                                                                                                                          { (#,#) ipv4_sCON [Occ=Once]
                                                                                                                                  _ [Occ=Dead] ->
                                                                                                                                let {
                                                                                                                                  sat_sCOU [Occ=Once]
                                                                                                                                    :: GHC.Prim.Any
                                                                                                                                  [LclId,
                                                                                                                                   Str=] =
                                                                                                                                      \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta3_sCOQ]
                                                                                                                                          case
                                                                                                                                              ipv3_sCOK
                                                                                                                                          of
                                                                                                                                          _ [Occ=Dead]
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                                    eta3_sCOQ;
                                                                                                                                            GHC.Base.Just x_sCOS [Occ=Once] ->
                                                                                                                                                let {
                                                                                                                                                  sat_sCOT [Occ=Once]
                                                                                                                                                    :: b_a6Q4
                                                                                                                                                  [LclId,
                                                                                                                                                   Str=] =
                                                                                                                                                      \u srt:SRT:[] []
                                                                                                                                                          f_sCMZ
                                                                                                                                                              x_sCOS;
                                                                                                                                                } in 
                                                                                                                                                  (#,#) [eta3_sCOQ
                                                                                                                                                         sat_sCOT];
                                                                                                                                          };
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCOU
                                                                                                                                                                                  ipv4_sCON]
                                                                                                                                  of
                                                                                                                                  s8_sCOV [OS=OneShot]
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            ipv3_sCOK
                                                                                                                                        of
                                                                                                                                        _ [Occ=Dead]
                                                                                                                                        { GHC.Base.Nothing ->
                                                                                                                                              case
                                                                                                                                                  __primcall  eta.fibers.PrimOps.throwEmpty [s8_sCOV]
                                                                                                                                              of
                                                                                                                                              s9_sCOY [OS=OneShot]
                                                                                                                                              { __DEFAULT ->
                                                                                                                                                    (#,#) [s9_sCOY
                                                                                                                                                           GHC.Err.undefined];
                                                                                                                                              };
                                                                                                                                          GHC.Base.Just x_sCOZ [Occ=Once] ->
                                                                                                                                              let {
                                                                                                                                                sat_sCP0 [Occ=Once]
                                                                                                                                                  :: b_a6Q4
                                                                                                                                                [LclId,
                                                                                                                                                 Str=] =
                                                                                                                                                    \u srt:SRT:[] []
                                                                                                                                                        f_sCMZ
                                                                                                                                                            x_sCOZ;
                                                                                                                                              } in 
                                                                                                                                                (#,#) [s8_sCOV
                                                                                                                                                       sat_sCP0];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                    };
                                                                              };
                                                                      };
                                                            }; } in
                                                let {
                                                  sat_sCP2 [Occ=Once] :: GHC.Prim.Any
                                                  [LclId, Str=] =
                                                      \u srt:SRT:[] []
                                                          Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                              mf_sCIC sat_sCP1;
                                                } in 
                                                  __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sCP2
                                                                                                   sat_sCR6
                                                                                                   eta1_sCMW];
                                  } in 
                                    case
                                        __primcall  eta.fibers.PrimOps.pushNextC [a8_sCMU s2_sCIL]
                                    of
                                    s3_sCR8 [OS=OneShot]
                                    { __DEFAULT ->
                                          case
                                              newMutVar# [GHC.Base.Nothing s3_sCR8]
                                          of
                                          _ [Occ=Dead]
                                          { (#,#) ipv_sCRA [Occ=Once] ipv1_sCRB ->
                                                case
                                                    __primcall  eta.fibers.PrimOps.popNextC [ipv_sCRA]
                                                of
                                                _ [Occ=Dead]
                                                { (#,#) ipv2_sCRE [Occ=Once] _ [Occ=Dead] ->
                                                      let {
                                                        sat_sCRH [Occ=Once]
                                                          :: GHC.IORef.IORef
                                                               (GHC.Base.Maybe a6_a6Q3)
                                                        [LclId, Str=] =
                                                            NO_CCS GHC.STRef.STRef! [ipv1_sCRB]; } in
                                                      let {
                                                        sat_sCRI [Occ=Once] :: GHC.Prim.Any
                                                        [LclId, Str=] =
                                                            \u srt:SRT:[] [] a8_sCMU sat_sCRH;
                                                      } in 
                                                        case
                                                            __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCRI
                                                                                                        ipv2_sCRE]
                                                        of
                                                        s5_sCRJ [OS=OneShot]
                                                        { __DEFAULT ->
                                                              $sa1_sCIO
                                                                  ipv1_sCRB
                                                                  GHC.Prim.coercionToken#
                                                                  s5_sCRJ;
                                                        };
                                                };
                                          };
                                    };
                        };
              } in 
                let {
                  a7_sCRK
                    :: GHC.IORef.IORef (GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4))
                       -> GHC.Prim.State# GHC.Prim.RealWorld
                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6Q4 #)
                  [LclId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
                      \r srt:SRT:[04B :-> GHC.Err.undefined,
                                  rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [r1_sCRL
                                                                                                    eta1_sCRM]
                          case
                              __primcall  eta.fibers.PrimOps.setCurrentC [a_rCFV eta1_sCRM]
                          of
                          s2_sCRO [OS=OneShot]
                          { __DEFAULT ->
                                let {
                                  a8_sCRP
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                             GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4) #)
                                  [LclId, Arity=1, Str=, Unf=OtherCon []] =
                                      \r srt:SRT:[] [eta_B1] GHC.STRef.readSTRef1 r1_sCRL eta_B1;
                                } in 
                                  let-no-escape {
                                    $sa1_sCRQ [Occ=Once!]
                                      :: GHC.Prim.MutVar#
                                           GHC.Prim.RealWorld (GHC.Base.Maybe a6_a6Q3)
                                         -> GHC.STRef.STRef
                                              GHC.Prim.RealWorld (GHC.Base.Maybe a6_a6Q3)
                                            ~R# GHC.IORef.IORef (GHC.Base.Maybe a6_a6Q3)
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6Q4 #)
                                    [LclId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
                                        sat-only \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                             rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [sc_sCRR
                                                                                                                               sg_sBM6
                                                                                                                               sc1_sCRS]
                                            let {
                                              a9_sCRT
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         GHC.Base.Maybe a6_a6Q3 #)
                                              [LclId, Arity=1, Str=, Unf=OtherCon []] =
                                                  \r srt:SRT:[] [eta2_sCRU]
                                                      readMutVar# [sc_sCRR eta2_sCRU];
                                            } in 
                                              let {
                                                sat_sCW2 [Occ=Once]
                                                  :: a6_a6Q3
                                                     -> Control.Concurrent.Fiber.Internal.Fiber
                                                          b_a6Q4
                                                [LclId, Str=] =
                                                    \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                                rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [x_sCU0
                                                                                                                                  eta2_sCU1]
                                                        let {
                                                          sat_sCU6 [Occ=Once] :: GHC.Prim.Any
                                                          [LclId, Str=] =
                                                              \r srt:SRT:[] [eta3_sCU3]
                                                                  let {
                                                                    sat_sCU4 [Occ=Once]
                                                                      :: GHC.Base.Maybe a6_a6Q3
                                                                    [LclId, Str=] =
                                                                        NO_CCS GHC.Base.Just! [x_sCU0];
                                                                  } in 
                                                                    case
                                                                        writeMutVar# [sc_sCRR
                                                                                      sat_sCU4
                                                                                      eta3_sCU3]
                                                                    of
                                                                    s2#_sCU5 [OS=OneShot]
                                                                    { __DEFAULT ->
                                                                          (#,#) [s2#_sCU5
                                                                                 GHC.Tuple.()];
                                                                    };
                                                        } in 
                                                          case
                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCU6
                                                                                                          eta2_sCU1]
                                                          of
                                                          s3_sCU7 [OS=OneShot]
                                                          { __DEFAULT ->
                                                                let {
                                                                  a10_sCU8
                                                                    :: GHC.Base.Maybe
                                                                         (a6_a6Q3 -> b_a6Q4)
                                                                       -> GHC.Prim.State#
                                                                            GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             b_a6Q4 #)
                                                                  [LclId,
                                                                   Arity=2,
                                                                   Str=<S,1*U><S,U>,
                                                                   Unf=OtherCon []] =
                                                                      \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mf1_sCU9
                                                                                                                                                    eta3_sCUA]
                                                                          case
                                                                              mf1_sCU9
                                                                          of
                                                                          _ [Occ=Dead]
                                                                          { GHC.Base.Nothing ->
                                                                                Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                    eta3_sCUA;
                                                                            GHC.Base.Just f_sCUC [Occ=Once!] ->
                                                                                let {
                                                                                  sat_sCUD [Occ=Once]
                                                                                    :: b_a6Q4
                                                                                  [LclId, Str=] =
                                                                                      \u srt:SRT:[] []
                                                                                          f_sCUC
                                                                                              x_sCU0;
                                                                                } in 
                                                                                  (#,#) [eta3_sCUA
                                                                                         sat_sCUD];
                                                                          };
                                                                } in 
                                                                  let {
                                                                    sat_sCV2 [Occ=Once]
                                                                      :: GHC.Prim.Any
                                                                    [LclId, Str=] =
                                                                        \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCUF
                                                                                                                eta3_sCUG]
                                                                            case
                                                                                __primcall  eta.fibers.PrimOps.setCurrentC [a8_sCRP
                                                                                                                            eta3_sCUG]
                                                                            of
                                                                            s4_sCUI [OS=OneShot]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __primcall  eta.fibers.PrimOps.pushNextC [a10_sCU8
                                                                                                                                s4_sCUI]
                                                                                  of
                                                                                  s5_sCUK [OS=OneShot]
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            r1_sCRL
                                                                                        of
                                                                                        _ [Occ=Dead]
                                                                                        { GHC.STRef.STRef var#_sCUM [Occ=Once] ->
                                                                                              case
                                                                                                  readMutVar# [var#_sCUM
                                                                                                               s5_sCUK]
                                                                                              of
                                                                                              _ [Occ=Dead]
                                                                                              { (#,#) ipv_sCUO [Occ=Once]
                                                                                                      ipv1_sCUP ->
                                                                                                    case
                                                                                                        __primcall  eta.fibers.PrimOps.popNextC [ipv_sCUO]
                                                                                                    of
                                                                                                    _ [Occ=Dead]
                                                                                                    { (#,#) ipv2_sCUS [Occ=Once]
                                                                                                            _ [Occ=Dead] ->
                                                                                                          let {
                                                                                                            sat_sCUV [Occ=Once]
                                                                                                              :: GHC.Prim.Any
                                                                                                            [LclId,
                                                                                                             Str=] =
                                                                                                                \u srt:SRT:[] []
                                                                                                                    a10_sCU8
                                                                                                                        ipv1_sCUP;
                                                                                                          } in 
                                                                                                            case
                                                                                                                __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCUV
                                                                                                                                                            ipv2_sCUS]
                                                                                                            of
                                                                                                            s6_sCUW [OS=OneShot]
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      ipv1_sCUP
                                                                                                                  of
                                                                                                                  _ [Occ=Dead]
                                                                                                                  { GHC.Base.Nothing ->
                                                                                                                        case
                                                                                                                            __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCUW]
                                                                                                                        of
                                                                                                                        s7_sCUZ [OS=OneShot]
                                                                                                                        { __DEFAULT ->
                                                                                                                              (#,#) [s7_sCUZ
                                                                                                                                     GHC.Err.undefined];
                                                                                                                        };
                                                                                                                    GHC.Base.Just f_sCV0 [Occ=Once!] ->
                                                                                                                        let {
                                                                                                                          sat_sCV1 [Occ=Once]
                                                                                                                            :: b_a6Q4
                                                                                                                          [LclId,
                                                                                                                           Str=] =
                                                                                                                              \u srt:SRT:[] []
                                                                                                                                  f_sCV0
                                                                                                                                      x_sCU0;
                                                                                                                        } in 
                                                                                                                          (#,#) [s6_sCUW
                                                                                                                                 sat_sCV1];
                                                                                                                  };
                                                                                                            };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                  } in 
                                                                    case
                                                                        __primcall  eta.fibers.PrimOps.pushNextC [sat_sCV2
                                                                                                                  s3_sCU7]
                                                                    of
                                                                    s4_sCV3 [OS=OneShot]
                                                                    { __DEFAULT ->
                                                                          let {
                                                                            sat_sCV4 [Occ=Once]
                                                                              :: GHC.Base.Maybe
                                                                                   a6_a6Q3
                                                                            [LclId, Str=] =
                                                                                NO_CCS GHC.Base.Just! [x_sCU0];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [sc_sCRR
                                                                                              sat_sCV4
                                                                                              s4_sCV3]
                                                                            of
                                                                            s2#_sCV5 [OS=OneShot]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __primcall  eta.fibers.PrimOps.popNextC [s2#_sCV5]
                                                                                  of
                                                                                  _ [Occ=Dead]
                                                                                  { (#,#) ipv_sCV8 [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                                        let {
                                                                                          sat_sCVB [Occ=Once]
                                                                                            :: GHC.Prim.Any
                                                                                          [LclId,
                                                                                           Str=] =
                                                                                              \u srt:SRT:[] []
                                                                                                  Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                      a8_sCRP
                                                                                                      a10_sCU8;
                                                                                        } in 
                                                                                          case
                                                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCVB
                                                                                                                                          ipv_sCV8]
                                                                                          of
                                                                                          s5_sCVC [OS=OneShot]
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __primcall  eta.fibers.PrimOps.setCurrentC [a8_sCRP
                                                                                                                                                s5_sCVC]
                                                                                                of
                                                                                                s6_sCVE [OS=OneShot]
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __primcall  eta.fibers.PrimOps.pushNextC [a10_sCU8
                                                                                                                                                    s6_sCVE]
                                                                                                      of
                                                                                                      s7_sCVG [OS=OneShot]
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                r1_sCRL
                                                                                                            of
                                                                                                            _ [Occ=Dead]
                                                                                                            { GHC.STRef.STRef var#_sCVI [Occ=Once] ->
                                                                                                                  case
                                                                                                                      readMutVar# [var#_sCVI
                                                                                                                                   s7_sCVG]
                                                                                                                  of
                                                                                                                  _ [Occ=Dead]
                                                                                                                  { (#,#) ipv2_sCVK [Occ=Once]
                                                                                                                          ipv3_sCVL ->
                                                                                                                        case
                                                                                                                            __primcall  eta.fibers.PrimOps.popNextC [ipv2_sCVK]
                                                                                                                        of
                                                                                                                        _ [Occ=Dead]
                                                                                                                        { (#,#) ipv4_sCVO [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              let {
                                                                                                                                sat_sCVV [Occ=Once]
                                                                                                                                  :: GHC.Prim.Any
                                                                                                                                [LclId,
                                                                                                                                 Str=] =
                                                                                                                                    \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta3_sCVR]
                                                                                                                                        case
                                                                                                                                            ipv3_sCVL
                                                                                                                                        of
                                                                                                                                        _ [Occ=Dead]
                                                                                                                                        { GHC.Base.Nothing ->
                                                                                                                                              Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                                  eta3_sCVR;
                                                                                                                                          GHC.Base.Just f_sCVT [Occ=Once!] ->
                                                                                                                                              let {
                                                                                                                                                sat_sCVU [Occ=Once]
                                                                                                                                                  :: b_a6Q4
                                                                                                                                                [LclId,
                                                                                                                                                 Str=] =
                                                                                                                                                    \u srt:SRT:[] []
                                                                                                                                                        f_sCVT
                                                                                                                                                            x_sCU0;
                                                                                                                                              } in 
                                                                                                                                                (#,#) [eta3_sCVR
                                                                                                                                                       sat_sCVU];
                                                                                                                                        };
                                                                                                                              } in 
                                                                                                                                case
                                                                                                                                    __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCVV
                                                                                                                                                                                ipv4_sCVO]
                                                                                                                                of
                                                                                                                                s8_sCVW [OS=OneShot]
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          ipv3_sCVL
                                                                                                                                      of
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      { GHC.Base.Nothing ->
                                                                                                                                            case
                                                                                                                                                __primcall  eta.fibers.PrimOps.throwEmpty [s8_sCVW]
                                                                                                                                            of
                                                                                                                                            s9_sCVZ [OS=OneShot]
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  (#,#) [s9_sCVZ
                                                                                                                                                         GHC.Err.undefined];
                                                                                                                                            };
                                                                                                                                        GHC.Base.Just f_sCW0 [Occ=Once!] ->
                                                                                                                                            let {
                                                                                                                                              sat_sCW1 [Occ=Once]
                                                                                                                                                :: b_a6Q4
                                                                                                                                              [LclId,
                                                                                                                                               Str=] =
                                                                                                                                                  \u srt:SRT:[] []
                                                                                                                                                      f_sCW0
                                                                                                                                                          x_sCU0;
                                                                                                                                            } in 
                                                                                                                                              (#,#) [s8_sCVW
                                                                                                                                                     sat_sCW1];
                                                                                                                                      };
                                                                                                                                };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                  };
                                                                            };
                                                                    };
                                                          }; } in
                                              let {
                                                sat_sCW3 [Occ=Once] :: GHC.Prim.Any
                                                [LclId, Str=] =
                                                    \u srt:SRT:[] []
                                                        Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                            mx_sCID sat_sCW2;
                                              } in 
                                                let {
                                                  sat_sCTY [Occ=Once]
                                                    :: (a6_a6Q3 -> b_a6Q4)
                                                       -> Control.Concurrent.Fiber.Internal.Fiber
                                                            b_a6Q4
                                                  [LclId, Str=] =
                                                      \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                                  rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [f_sCRW
                                                                                                                                    eta2_sCRX]
                                                          let {
                                                            sat_sCS4 [Occ=Once] :: GHC.Prim.Any
                                                            [LclId, Str=] =
                                                                \r srt:SRT:[] [eta3_sCRZ]
                                                                    case r1_sCRL of _ [Occ=Dead] {
                                                                      GHC.STRef.STRef var#_sCS1 [Occ=Once] ->
                                                                          let {
                                                                            sat_sCS2 [Occ=Once]
                                                                              :: GHC.Base.Maybe
                                                                                   (a6_a6Q3
                                                                                    -> b_a6Q4)
                                                                            [LclId, Str=] =
                                                                                NO_CCS GHC.Base.Just! [f_sCRW];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [var#_sCS1
                                                                                              sat_sCS2
                                                                                              eta3_sCRZ]
                                                                            of
                                                                            s2#_sCS3 [OS=OneShot]
                                                                            { __DEFAULT ->
                                                                                  (#,#) [s2#_sCS3
                                                                                         GHC.Tuple.()];
                                                                            };
                                                                    };
                                                          } in 
                                                            case
                                                                __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCS4
                                                                                                            eta2_sCRX]
                                                            of
                                                            s3_sCS5 [OS=OneShot]
                                                            { __DEFAULT ->
                                                                  let {
                                                                    a10_sCS6
                                                                      :: GHC.Base.Maybe a6_a6Q3
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               b_a6Q4 #)
                                                                    [LclId,
                                                                     Arity=2,
                                                                     Str=<S,1*U><S,U> {a4S4-><L,1*C1(U)>},
                                                                     Unf=OtherCon []] =
                                                                        \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mx1_sCS7
                                                                                                                                                      eta3_sCS8]
                                                                            case
                                                                                mx1_sCS7
                                                                            of
                                                                            _ [Occ=Dead]
                                                                            { GHC.Base.Nothing ->
                                                                                  Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                      eta3_sCS8;
                                                                              GHC.Base.Just x_sCSA [Occ=Once] ->
                                                                                  let {
                                                                                    sat_sCSB [Occ=Once]
                                                                                      :: b_a6Q4
                                                                                    [LclId, Str=] =
                                                                                        \u srt:SRT:[] []
                                                                                            f_sCRW
                                                                                                x_sCSA;
                                                                                  } in 
                                                                                    (#,#) [eta3_sCS8
                                                                                           sat_sCSB];
                                                                            };
                                                                  } in 
                                                                    let {
                                                                      sat_sCSY [Occ=Once]
                                                                        :: GHC.Prim.Any
                                                                      [LclId, Str=] =
                                                                          \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCSD
                                                                                                                  eta3_sCSE]
                                                                              case
                                                                                  __primcall  eta.fibers.PrimOps.setCurrentC [a9_sCRT
                                                                                                                              eta3_sCSE]
                                                                              of
                                                                              s4_sCSG [OS=OneShot]
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __primcall  eta.fibers.PrimOps.pushNextC [a10_sCS6
                                                                                                                                  s4_sCSG]
                                                                                    of
                                                                                    s5_sCSI [OS=OneShot]
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              readMutVar# [sc_sCRR
                                                                                                           s5_sCSI]
                                                                                          of
                                                                                          _ [Occ=Dead]
                                                                                          { (#,#) ipv_sCSK [Occ=Once]
                                                                                                  ipv1_sCSL ->
                                                                                                case
                                                                                                    __primcall  eta.fibers.PrimOps.popNextC [ipv_sCSK]
                                                                                                of
                                                                                                _ [Occ=Dead]
                                                                                                { (#,#) ipv2_sCSO [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                                      let {
                                                                                                        sat_sCSR [Occ=Once]
                                                                                                          :: GHC.Prim.Any
                                                                                                        [LclId,
                                                                                                         Str=] =
                                                                                                            \u srt:SRT:[] []
                                                                                                                a10_sCS6
                                                                                                                    ipv1_sCSL;
                                                                                                      } in 
                                                                                                        case
                                                                                                            __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCSR
                                                                                                                                                        ipv2_sCSO]
                                                                                                        of
                                                                                                        s6_sCSS [OS=OneShot]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  ipv1_sCSL
                                                                                                              of
                                                                                                              _ [Occ=Dead]
                                                                                                              { GHC.Base.Nothing ->
                                                                                                                    case
                                                                                                                        __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCSS]
                                                                                                                    of
                                                                                                                    s7_sCSV [OS=OneShot]
                                                                                                                    { __DEFAULT ->
                                                                                                                          (#,#) [s7_sCSV
                                                                                                                                 GHC.Err.undefined];
                                                                                                                    };
                                                                                                                GHC.Base.Just x_sCSW [Occ=Once] ->
                                                                                                                    let {
                                                                                                                      sat_sCSX [Occ=Once]
                                                                                                                        :: b_a6Q4
                                                                                                                      [LclId,
                                                                                                                       Str=] =
                                                                                                                          \u srt:SRT:[] []
                                                                                                                              f_sCRW
                                                                                                                                  x_sCSW;
                                                                                                                    } in 
                                                                                                                      (#,#) [s6_sCSS
                                                                                                                             sat_sCSX];
                                                                                                              };
                                                                                                        };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          __primcall  eta.fibers.PrimOps.pushNextC [sat_sCSY
                                                                                                                    s3_sCS5]
                                                                      of
                                                                      s4_sCSZ [OS=OneShot]
                                                                      { __DEFAULT ->
                                                                            case
                                                                                r1_sCRL
                                                                            of
                                                                            _ [Occ=Dead]
                                                                            { GHC.STRef.STRef var#_sCT1 [Occ=Once] ->
                                                                                  let {
                                                                                    sat_sCT2 [Occ=Once]
                                                                                      :: GHC.Base.Maybe
                                                                                           (a6_a6Q3
                                                                                            -> b_a6Q4)
                                                                                    [LclId, Str=] =
                                                                                        NO_CCS GHC.Base.Just! [f_sCRW];
                                                                                  } in 
                                                                                    case
                                                                                        writeMutVar# [var#_sCT1
                                                                                                      sat_sCT2
                                                                                                      s4_sCSZ]
                                                                                    of
                                                                                    s2#_sCT3 [OS=OneShot]
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              __primcall  eta.fibers.PrimOps.popNextC [s2#_sCT3]
                                                                                          of
                                                                                          _ [Occ=Dead]
                                                                                          { (#,#) ipv_sCT6 [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                                                let {
                                                                                                  sat_sCT9 [Occ=Once]
                                                                                                    :: GHC.Prim.Any
                                                                                                  [LclId,
                                                                                                   Str=] =
                                                                                                      \u srt:SRT:[] []
                                                                                                          Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                              a9_sCRT
                                                                                                              a10_sCS6;
                                                                                                } in 
                                                                                                  case
                                                                                                      __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCT9
                                                                                                                                                  ipv_sCT6]
                                                                                                  of
                                                                                                  s5_sCTA [OS=OneShot]
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __primcall  eta.fibers.PrimOps.setCurrentC [a9_sCRT
                                                                                                                                                        s5_sCTA]
                                                                                                        of
                                                                                                        s6_sCTC [OS=OneShot]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __primcall  eta.fibers.PrimOps.pushNextC [a10_sCS6
                                                                                                                                                            s6_sCTC]
                                                                                                              of
                                                                                                              s7_sCTE [OS=OneShot]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        readMutVar# [sc_sCRR
                                                                                                                                     s7_sCTE]
                                                                                                                    of
                                                                                                                    _ [Occ=Dead]
                                                                                                                    { (#,#) ipv2_sCTG [Occ=Once]
                                                                                                                            ipv3_sCTH ->
                                                                                                                          case
                                                                                                                              __primcall  eta.fibers.PrimOps.popNextC [ipv2_sCTG]
                                                                                                                          of
                                                                                                                          _ [Occ=Dead]
                                                                                                                          { (#,#) ipv4_sCTK [Occ=Once]
                                                                                                                                  _ [Occ=Dead] ->
                                                                                                                                let {
                                                                                                                                  sat_sCTR [Occ=Once]
                                                                                                                                    :: GHC.Prim.Any
                                                                                                                                  [LclId,
                                                                                                                                   Str=] =
                                                                                                                                      \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta3_sCTN]
                                                                                                                                          case
                                                                                                                                              ipv3_sCTH
                                                                                                                                          of
                                                                                                                                          _ [Occ=Dead]
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                                    eta3_sCTN;
                                                                                                                                            GHC.Base.Just x_sCTP [Occ=Once] ->
                                                                                                                                                let {
                                                                                                                                                  sat_sCTQ [Occ=Once]
                                                                                                                                                    :: b_a6Q4
                                                                                                                                                  [LclId,
                                                                                                                                                   Str=] =
                                                                                                                                                      \u srt:SRT:[] []
                                                                                                                                                          f_sCRW
                                                                                                                                                              x_sCTP;
                                                                                                                                                } in 
                                                                                                                                                  (#,#) [eta3_sCTN
                                                                                                                                                         sat_sCTQ];
                                                                                                                                          };
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCTR
                                                                                                                                                                                  ipv4_sCTK]
                                                                                                                                  of
                                                                                                                                  s8_sCTS [OS=OneShot]
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            ipv3_sCTH
                                                                                                                                        of
                                                                                                                                        _ [Occ=Dead]
                                                                                                                                        { GHC.Base.Nothing ->
                                                                                                                                              case
                                                                                                                                                  __primcall  eta.fibers.PrimOps.throwEmpty [s8_sCTS]
                                                                                                                                              of
                                                                                                                                              s9_sCTV [OS=OneShot]
                                                                                                                                              { __DEFAULT ->
                                                                                                                                                    (#,#) [s9_sCTV
                                                                                                                                                           GHC.Err.undefined];
                                                                                                                                              };
                                                                                                                                          GHC.Base.Just x_sCTW [Occ=Once] ->
                                                                                                                                              let {
                                                                                                                                                sat_sCTX [Occ=Once]
                                                                                                                                                  :: b_a6Q4
                                                                                                                                                [LclId,
                                                                                                                                                 Str=] =
                                                                                                                                                    \u srt:SRT:[] []
                                                                                                                                                        f_sCRW
                                                                                                                                                            x_sCTW;
                                                                                                                                              } in 
                                                                                                                                                (#,#) [s8_sCTS
                                                                                                                                                       sat_sCTX];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                          };
                                                                                    };
                                                                            };
                                                                      };
                                                            }; } in
                                                let {
                                                  sat_sCTZ [Occ=Once] :: GHC.Prim.Any
                                                  [LclId, Str=] =
                                                      \u srt:SRT:[] []
                                                          Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                              mf_sCIC sat_sCTY;
                                                } in 
                                                  __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sCTZ
                                                                                                   sat_sCW3
                                                                                                   sc1_sCRS];
                                  } in 
                                    let {
                                      a9_sCW4
                                        :: GHC.IORef.IORef (GHC.Base.Maybe a6_a6Q3)
                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6Q4 #)
                                      [LclId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
                                          \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                      rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [r2_sCW5
                                                                                                                        eta2_sCW6]
                                              let {
                                                a10_sCW7
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           GHC.Base.Maybe a6_a6Q3 #)
                                                [LclId, Arity=1, Str=, Unf=OtherCon []] =
                                                    \r srt:SRT:[] [eta_B1]
                                                        GHC.STRef.readSTRef1 r2_sCW5 eta_B1;
                                              } in 
                                                let {
                                                  sat_sD0N [Occ=Once]
                                                    :: a6_a6Q3
                                                       -> Control.Concurrent.Fiber.Internal.Fiber
                                                            b_a6Q4
                                                  [LclId, Str=] =
                                                      \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                                  rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [x_sCYH
                                                                                                                                    eta3_sCYI]
                                                          let {
                                                            sat_sCYP [Occ=Once] :: GHC.Prim.Any
                                                            [LclId, Str=] =
                                                                \r srt:SRT:[] [eta4_sCYK]
                                                                    case r2_sCW5 of _ [Occ=Dead] {
                                                                      GHC.STRef.STRef var#_sCYM [Occ=Once] ->
                                                                          let {
                                                                            sat_sCYN [Occ=Once]
                                                                              :: GHC.Base.Maybe
                                                                                   a6_a6Q3
                                                                            [LclId, Str=] =
                                                                                NO_CCS GHC.Base.Just! [x_sCYH];
                                                                          } in 
                                                                            case
                                                                                writeMutVar# [var#_sCYM
                                                                                              sat_sCYN
                                                                                              eta4_sCYK]
                                                                            of
                                                                            s2#_sCYO [OS=OneShot]
                                                                            { __DEFAULT ->
                                                                                  (#,#) [s2#_sCYO
                                                                                         GHC.Tuple.()];
                                                                            };
                                                                    };
                                                          } in 
                                                            case
                                                                __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCYP
                                                                                                            eta3_sCYI]
                                                            of
                                                            s3_sCYQ [OS=OneShot]
                                                            { __DEFAULT ->
                                                                  let {
                                                                    a11_sCYR
                                                                      :: GHC.Base.Maybe
                                                                           (a6_a6Q3 -> b_a6Q4)
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               b_a6Q4 #)
                                                                    [LclId,
                                                                     Arity=2,
                                                                     Str=<S,1*U><S,U>,
                                                                     Unf=OtherCon []] =
                                                                        \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mf1_sCYS
                                                                                                                                                      eta4_sCYT]
                                                                            case
                                                                                mf1_sCYS
                                                                            of
                                                                            _ [Occ=Dead]
                                                                            { GHC.Base.Nothing ->
                                                                                  Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                      eta4_sCYT;
                                                                              GHC.Base.Just f_sCYV [Occ=Once!] ->
                                                                                  let {
                                                                                    sat_sCYW [Occ=Once]
                                                                                      :: b_a6Q4
                                                                                    [LclId, Str=] =
                                                                                        \u srt:SRT:[] []
                                                                                            f_sCYV
                                                                                                x_sCYH;
                                                                                  } in 
                                                                                    (#,#) [eta4_sCYT
                                                                                           sat_sCYW];
                                                                            };
                                                                  } in 
                                                                    let {
                                                                      sat_sCZL [Occ=Once]
                                                                        :: GHC.Prim.Any
                                                                      [LclId, Str=] =
                                                                          \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCYY
                                                                                                                  eta4_sCYZ]
                                                                              case
                                                                                  __primcall  eta.fibers.PrimOps.setCurrentC [a8_sCRP
                                                                                                                              eta4_sCYZ]
                                                                              of
                                                                              s4_sCZ1 [OS=OneShot]
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __primcall  eta.fibers.PrimOps.pushNextC [a11_sCYR
                                                                                                                                  s4_sCZ1]
                                                                                    of
                                                                                    s5_sCZ3 [OS=OneShot]
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              r1_sCRL
                                                                                          of
                                                                                          _ [Occ=Dead]
                                                                                          { GHC.STRef.STRef var#_sCZ5 [Occ=Once] ->
                                                                                                case
                                                                                                    readMutVar# [var#_sCZ5
                                                                                                                 s5_sCZ3]
                                                                                                of
                                                                                                _ [Occ=Dead]
                                                                                                { (#,#) ipv_sCZ7 [Occ=Once]
                                                                                                        ipv1_sCZ8 ->
                                                                                                      case
                                                                                                          __primcall  eta.fibers.PrimOps.popNextC [ipv_sCZ7]
                                                                                                      of
                                                                                                      _ [Occ=Dead]
                                                                                                      { (#,#) ipv2_sCZB [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            let {
                                                                                                              sat_sCZE [Occ=Once]
                                                                                                                :: GHC.Prim.Any
                                                                                                              [LclId,
                                                                                                               Str=] =
                                                                                                                  \u srt:SRT:[] []
                                                                                                                      a11_sCYR
                                                                                                                          ipv1_sCZ8;
                                                                                                            } in 
                                                                                                              case
                                                                                                                  __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCZE
                                                                                                                                                              ipv2_sCZB]
                                                                                                              of
                                                                                                              s6_sCZF [OS=OneShot]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        ipv1_sCZ8
                                                                                                                    of
                                                                                                                    _ [Occ=Dead]
                                                                                                                    { GHC.Base.Nothing ->
                                                                                                                          case
                                                                                                                              __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCZF]
                                                                                                                          of
                                                                                                                          s7_sCZI [OS=OneShot]
                                                                                                                          { __DEFAULT ->
                                                                                                                                (#,#) [s7_sCZI
                                                                                                                                       GHC.Err.undefined];
                                                                                                                          };
                                                                                                                      GHC.Base.Just f_sCZJ [Occ=Once!] ->
                                                                                                                          let {
                                                                                                                            sat_sCZK [Occ=Once]
                                                                                                                              :: b_a6Q4
                                                                                                                            [LclId,
                                                                                                                             Str=] =
                                                                                                                                \u srt:SRT:[] []
                                                                                                                                    f_sCZJ
                                                                                                                                        x_sCYH;
                                                                                                                          } in 
                                                                                                                            (#,#) [s6_sCZF
                                                                                                                                   sat_sCZK];
                                                                                                                    };
                                                                                                              };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      case
                                                                          __primcall  eta.fibers.PrimOps.pushNextC [sat_sCZL
                                                                                                                    s3_sCYQ]
                                                                      of
                                                                      s4_sCZM [OS=OneShot]
                                                                      { __DEFAULT ->
                                                                            case
                                                                                r2_sCW5
                                                                            of
                                                                            _ [Occ=Dead]
                                                                            { GHC.STRef.STRef var#_sCZO [Occ=Once] ->
                                                                                  let {
                                                                                    sat_sCZP [Occ=Once]
                                                                                      :: GHC.Base.Maybe
                                                                                           a6_a6Q3
                                                                                    [LclId, Str=] =
                                                                                        NO_CCS GHC.Base.Just! [x_sCYH];
                                                                                  } in 
                                                                                    case
                                                                                        writeMutVar# [var#_sCZO
                                                                                                      sat_sCZP
                                                                                                      s4_sCZM]
                                                                                    of
                                                                                    s2#_sCZQ [OS=OneShot]
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              __primcall  eta.fibers.PrimOps.popNextC [s2#_sCZQ]
                                                                                          of
                                                                                          _ [Occ=Dead]
                                                                                          { (#,#) ipv_sCZT [Occ=Once]
                                                                                                  _ [Occ=Dead] ->
                                                                                                let {
                                                                                                  sat_sCZW [Occ=Once]
                                                                                                    :: GHC.Prim.Any
                                                                                                  [LclId,
                                                                                                   Str=] =
                                                                                                      \u srt:SRT:[] []
                                                                                                          Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                              a8_sCRP
                                                                                                              a11_sCYR;
                                                                                                } in 
                                                                                                  case
                                                                                                      __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCZW
                                                                                                                                                  ipv_sCZT]
                                                                                                  of
                                                                                                  s5_sCZX [OS=OneShot]
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __primcall  eta.fibers.PrimOps.setCurrentC [a8_sCRP
                                                                                                                                                        s5_sCZX]
                                                                                                        of
                                                                                                        s6_sCZZ [OS=OneShot]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __primcall  eta.fibers.PrimOps.pushNextC [a11_sCYR
                                                                                                                                                            s6_sCZZ]
                                                                                                              of
                                                                                                              s7_sD01 [OS=OneShot]
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        r1_sCRL
                                                                                                                    of
                                                                                                                    _ [Occ=Dead]
                                                                                                                    { GHC.STRef.STRef var#1_sD03 [Occ=Once] ->
                                                                                                                          case
                                                                                                                              readMutVar# [var#1_sD03
                                                                                                                                           s7_sD01]
                                                                                                                          of
                                                                                                                          _ [Occ=Dead]
                                                                                                                          { (#,#) ipv2_sD05 [Occ=Once]
                                                                                                                                  ipv3_sD06 ->
                                                                                                                                case
                                                                                                                                    __primcall  eta.fibers.PrimOps.popNextC [ipv2_sD05]
                                                                                                                                of
                                                                                                                                _ [Occ=Dead]
                                                                                                                                { (#,#) ipv4_sD09 [Occ=Once]
                                                                                                                                        _ [Occ=Dead] ->
                                                                                                                                      let {
                                                                                                                                        sat_sD0G [Occ=Once]
                                                                                                                                          :: GHC.Prim.Any
                                                                                                                                        [LclId,
                                                                                                                                         Str=] =
                                                                                                                                            \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta4_sD0C]
                                                                                                                                                case
                                                                                                                                                    ipv3_sD06
                                                                                                                                                of
                                                                                                                                                _ [Occ=Dead]
                                                                                                                                                { GHC.Base.Nothing ->
                                                                                                                                                      Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                                          eta4_sD0C;
                                                                                                                                                  GHC.Base.Just f_sD0E [Occ=Once!] ->
                                                                                                                                                      let {
                                                                                                                                                        sat_sD0F [Occ=Once]
                                                                                                                                                          :: b_a6Q4
                                                                                                                                                        [LclId,
                                                                                                                                                         Str=] =
                                                                                                                                                            \u srt:SRT:[] []
                                                                                                                                                                f_sD0E
                                                                                                                                                                    x_sCYH;
                                                                                                                                                      } in 
                                                                                                                                                        (#,#) [eta4_sD0C
                                                                                                                                                               sat_sD0F];
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        case
                                                                                                                                            __primcall  eta.fibers.PrimOps.setCurrentC [sat_sD0G
                                                                                                                                                                                        ipv4_sD09]
                                                                                                                                        of
                                                                                                                                        s8_sD0H [OS=OneShot]
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  ipv3_sD06
                                                                                                                                              of
                                                                                                                                              _ [Occ=Dead]
                                                                                                                                              { GHC.Base.Nothing ->
                                                                                                                                                    case
                                                                                                                                                        __primcall  eta.fibers.PrimOps.throwEmpty [s8_sD0H]
                                                                                                                                                    of
                                                                                                                                                    s9_sD0K [OS=OneShot]
                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                          (#,#) [s9_sD0K
                                                                                                                                                                 GHC.Err.undefined];
                                                                                                                                                    };
                                                                                                                                                GHC.Base.Just f_sD0L [Occ=Once!] ->
                                                                                                                                                    let {
                                                                                                                                                      sat_sD0M [Occ=Once]
                                                                                                                                                        :: b_a6Q4
                                                                                                                                                      [LclId,
                                                                                                                                                       Str=] =
                                                                                                                                                          \u srt:SRT:[] []
                                                                                                                                                              f_sD0L
                                                                                                                                                                  x_sCYH;
                                                                                                                                                    } in 
                                                                                                                                                      (#,#) [s8_sD0H
                                                                                                                                                             sat_sD0M];
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                          };
                                                                                    };
                                                                            };
                                                                      };
                                                            }; } in
                                                let {
                                                  sat_sD0O [Occ=Once] :: GHC.Prim.Any
                                                  [LclId, Str=] =
                                                      \u srt:SRT:[] []
                                                          Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                              mx_sCID sat_sD0N;
                                                } in 
                                                  let {
                                                    sat_sCYF [Occ=Once]
                                                      :: (a6_a6Q3 -> b_a6Q4)
                                                         -> Control.Concurrent.Fiber.Internal.Fiber
                                                              b_a6Q4
                                                    [LclId, Str=] =
                                                        \r srt:SRT:[04B :-> GHC.Err.undefined,
                                                                    rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [f_sCW9
                                                                                                                                      eta3_sCWA]
                                                            let {
                                                              sat_sCWH [Occ=Once] :: GHC.Prim.Any
                                                              [LclId, Str=] =
                                                                  \r srt:SRT:[] [eta4_sCWC]
                                                                      case r1_sCRL of _ [Occ=Dead] {
                                                                        GHC.STRef.STRef var#_sCWE [Occ=Once] ->
                                                                            let {
                                                                              sat_sCWF [Occ=Once]
                                                                                :: GHC.Base.Maybe
                                                                                     (a6_a6Q3
                                                                                      -> b_a6Q4)
                                                                              [LclId, Str=] =
                                                                                  NO_CCS GHC.Base.Just! [f_sCW9];
                                                                            } in 
                                                                              case
                                                                                  writeMutVar# [var#_sCWE
                                                                                                sat_sCWF
                                                                                                eta4_sCWC]
                                                                              of
                                                                              s2#_sCWG [OS=OneShot]
                                                                              { __DEFAULT ->
                                                                                    (#,#) [s2#_sCWG
                                                                                           GHC.Tuple.()];
                                                                              };
                                                                      };
                                                            } in 
                                                              case
                                                                  __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCWH
                                                                                                              eta3_sCWA]
                                                              of
                                                              s3_sCWI [OS=OneShot]
                                                              { __DEFAULT ->
                                                                    let {
                                                                      a11_sCWJ
                                                                        :: GHC.Base.Maybe a6_a6Q3
                                                                           -> GHC.Prim.State#
                                                                                GHC.Prim.RealWorld
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 b_a6Q4 #)
                                                                      [LclId,
                                                                       Arity=2,
                                                                       Str=<S,1*U><S,U> {a4S4-><L,1*C1(U)>},
                                                                       Unf=OtherCon []] =
                                                                          \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [mx1_sCWK
                                                                                                                                                        eta4_sCWL]
                                                                              case
                                                                                  mx1_sCWK
                                                                              of
                                                                              _ [Occ=Dead]
                                                                              { GHC.Base.Nothing ->
                                                                                    Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                        eta4_sCWL;
                                                                                GHC.Base.Just x_sCWN [Occ=Once] ->
                                                                                    let {
                                                                                      sat_sCWO [Occ=Once]
                                                                                        :: b_a6Q4
                                                                                      [LclId,
                                                                                       Str=] =
                                                                                          \u srt:SRT:[] []
                                                                                              f_sCW9
                                                                                                  x_sCWN;
                                                                                    } in 
                                                                                      (#,#) [eta4_sCWL
                                                                                             sat_sCWO];
                                                                              };
                                                                    } in 
                                                                      let {
                                                                        sat_sCXD [Occ=Once]
                                                                          :: GHC.Prim.Any
                                                                        [LclId, Str=] =
                                                                            \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sCWQ
                                                                                                                    eta4_sCWR]
                                                                                case
                                                                                    __primcall  eta.fibers.PrimOps.setCurrentC [a10_sCW7
                                                                                                                                eta4_sCWR]
                                                                                of
                                                                                s4_sCWT [OS=OneShot]
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __primcall  eta.fibers.PrimOps.pushNextC [a11_sCWJ
                                                                                                                                    s4_sCWT]
                                                                                      of
                                                                                      s5_sCWV [OS=OneShot]
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                r2_sCW5
                                                                                            of
                                                                                            _ [Occ=Dead]
                                                                                            { GHC.STRef.STRef var#_sCWX [Occ=Once] ->
                                                                                                  case
                                                                                                      readMutVar# [var#_sCWX
                                                                                                                   s5_sCWV]
                                                                                                  of
                                                                                                  _ [Occ=Dead]
                                                                                                  { (#,#) ipv_sCWZ [Occ=Once]
                                                                                                          ipv1_sCX0 ->
                                                                                                        case
                                                                                                            __primcall  eta.fibers.PrimOps.popNextC [ipv_sCWZ]
                                                                                                        of
                                                                                                        _ [Occ=Dead]
                                                                                                        { (#,#) ipv2_sCX3 [Occ=Once]
                                                                                                                _ [Occ=Dead] ->
                                                                                                              let {
                                                                                                                sat_sCX6 [Occ=Once]
                                                                                                                  :: GHC.Prim.Any
                                                                                                                [LclId,
                                                                                                                 Str=] =
                                                                                                                    \u srt:SRT:[] []
                                                                                                                        a11_sCWJ
                                                                                                                            ipv1_sCX0;
                                                                                                              } in 
                                                                                                                case
                                                                                                                    __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCX6
                                                                                                                                                                ipv2_sCX3]
                                                                                                                of
                                                                                                                s6_sCX7 [OS=OneShot]
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          ipv1_sCX0
                                                                                                                      of
                                                                                                                      _ [Occ=Dead]
                                                                                                                      { GHC.Base.Nothing ->
                                                                                                                            case
                                                                                                                                __primcall  eta.fibers.PrimOps.throwEmpty [s6_sCX7]
                                                                                                                            of
                                                                                                                            s7_sCXA [OS=OneShot]
                                                                                                                            { __DEFAULT ->
                                                                                                                                  (#,#) [s7_sCXA
                                                                                                                                         GHC.Err.undefined];
                                                                                                                            };
                                                                                                                        GHC.Base.Just x_sCXB [Occ=Once] ->
                                                                                                                            let {
                                                                                                                              sat_sCXC [Occ=Once]
                                                                                                                                :: b_a6Q4
                                                                                                                              [LclId,
                                                                                                                               Str=] =
                                                                                                                                  \u srt:SRT:[] []
                                                                                                                                      f_sCW9
                                                                                                                                          x_sCXB;
                                                                                                                            } in 
                                                                                                                              (#,#) [s6_sCX7
                                                                                                                                     sat_sCXC];
                                                                                                                      };
                                                                                                                };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            __primcall  eta.fibers.PrimOps.pushNextC [sat_sCXD
                                                                                                                      s3_sCWI]
                                                                        of
                                                                        s4_sCXE [OS=OneShot]
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  r1_sCRL
                                                                              of
                                                                              _ [Occ=Dead]
                                                                              { GHC.STRef.STRef var#_sCXG [Occ=Once] ->
                                                                                    let {
                                                                                      sat_sCXH [Occ=Once]
                                                                                        :: GHC.Base.Maybe
                                                                                             (a6_a6Q3
                                                                                              -> b_a6Q4)
                                                                                      [LclId,
                                                                                       Str=] =
                                                                                          NO_CCS GHC.Base.Just! [f_sCW9];
                                                                                    } in 
                                                                                      case
                                                                                          writeMutVar# [var#_sCXG
                                                                                                        sat_sCXH
                                                                                                        s4_sCXE]
                                                                                      of
                                                                                      s2#_sCXI [OS=OneShot]
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                __primcall  eta.fibers.PrimOps.popNextC [s2#_sCXI]
                                                                                            of
                                                                                            _ [Occ=Dead]
                                                                                            { (#,#) ipv_sCXL [Occ=Once]
                                                                                                    _ [Occ=Dead] ->
                                                                                                  let {
                                                                                                    sat_sCXO [Occ=Once]
                                                                                                      :: GHC.Prim.Any
                                                                                                    [LclId,
                                                                                                     Str=] =
                                                                                                        \u srt:SRT:[] []
                                                                                                            Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                                                                a10_sCW7
                                                                                                                a11_sCWJ;
                                                                                                  } in 
                                                                                                    case
                                                                                                        __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCXO
                                                                                                                                                    ipv_sCXL]
                                                                                                    of
                                                                                                    s5_sCXP [OS=OneShot]
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              __primcall  eta.fibers.PrimOps.setCurrentC [a10_sCW7
                                                                                                                                                          s5_sCXP]
                                                                                                          of
                                                                                                          s6_sCXR [OS=OneShot]
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    __primcall  eta.fibers.PrimOps.pushNextC [a11_sCWJ
                                                                                                                                                              s6_sCXR]
                                                                                                                of
                                                                                                                s7_sCXT [OS=OneShot]
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          r2_sCW5
                                                                                                                      of
                                                                                                                      _ [Occ=Dead]
                                                                                                                      { GHC.STRef.STRef var#1_sCXV [Occ=Once] ->
                                                                                                                            case
                                                                                                                                readMutVar# [var#1_sCXV
                                                                                                                                             s7_sCXT]
                                                                                                                            of
                                                                                                                            _ [Occ=Dead]
                                                                                                                            { (#,#) ipv2_sCXX [Occ=Once]
                                                                                                                                    ipv3_sCXY ->
                                                                                                                                  case
                                                                                                                                      __primcall  eta.fibers.PrimOps.popNextC [ipv2_sCXX]
                                                                                                                                  of
                                                                                                                                  _ [Occ=Dead]
                                                                                                                                  { (#,#) ipv4_sCY1 [Occ=Once]
                                                                                                                                          _ [Occ=Dead] ->
                                                                                                                                        let {
                                                                                                                                          sat_sCY8 [Occ=Once]
                                                                                                                                            :: GHC.Prim.Any
                                                                                                                                          [LclId,
                                                                                                                                           Str=] =
                                                                                                                                              \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta4_sCY4]
                                                                                                                                                  case
                                                                                                                                                      ipv3_sCXY
                                                                                                                                                  of
                                                                                                                                                  _ [Occ=Dead]
                                                                                                                                                  { GHC.Base.Nothing ->
                                                                                                                                                        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                                                                                                                            eta4_sCY4;
                                                                                                                                                    GHC.Base.Just x_sCY6 [Occ=Once] ->
                                                                                                                                                        let {
                                                                                                                                                          sat_sCY7 [Occ=Once]
                                                                                                                                                            :: b_a6Q4
                                                                                                                                                          [LclId,
                                                                                                                                                           Str=] =
                                                                                                                                                              \u srt:SRT:[] []
                                                                                                                                                                  f_sCW9
                                                                                                                                                                      x_sCY6;
                                                                                                                                                        } in 
                                                                                                                                                          (#,#) [eta4_sCY4
                                                                                                                                                                 sat_sCY7];
                                                                                                                                                  };
                                                                                                                                        } in 
                                                                                                                                          case
                                                                                                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sCY8
                                                                                                                                                                                          ipv4_sCY1]
                                                                                                                                          of
                                                                                                                                          s8_sCY9 [OS=OneShot]
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    ipv3_sCXY
                                                                                                                                                of
                                                                                                                                                _ [Occ=Dead]
                                                                                                                                                { GHC.Base.Nothing ->
                                                                                                                                                      case
                                                                                                                                                          __primcall  eta.fibers.PrimOps.throwEmpty [s8_sCY9]
                                                                                                                                                      of
                                                                                                                                                      s9_sCYC [OS=OneShot]
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            (#,#) [s9_sCYC
                                                                                                                                                                   GHC.Err.undefined];
                                                                                                                                                      };
                                                                                                                                                  GHC.Base.Just x_sCYD [Occ=Once] ->
                                                                                                                                                      let {
                                                                                                                                                        sat_sCYE [Occ=Once]
                                                                                                                                                          :: b_a6Q4
                                                                                                                                                        [LclId,
                                                                                                                                                         Str=] =
                                                                                                                                                            \u srt:SRT:[] []
                                                                                                                                                                f_sCW9
                                                                                                                                                                    x_sCYD;
                                                                                                                                                      } in 
                                                                                                                                                        (#,#) [s8_sCY9
                                                                                                                                                               sat_sCYE];
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                            };
                                                                                      };
                                                                              };
                                                                        };
                                                              }; } in
                                                  let {
                                                    sat_sCYG [Occ=Once] :: GHC.Prim.Any
                                                    [LclId, Str=] =
                                                        \u srt:SRT:[] []
                                                            Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                                                                mf_sCIC sat_sCYF;
                                                  } in 
                                                    __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sCYG
                                                                                                     sat_sD0O
                                                                                                     eta2_sCW6];
                                    } in 
                                      case
                                          __primcall  eta.fibers.PrimOps.pushNextC [a9_sCW4 s2_sCRO]
                                      of
                                      s3_sD0Q [OS=OneShot]
                                      { __DEFAULT ->
                                            case
                                                newMutVar# [GHC.Base.Nothing s3_sD0Q]
                                            of
                                            _ [Occ=Dead]
                                            { (#,#) ipv_sD0S [Occ=Once] ipv1_sD0T ->
                                                  case
                                                      __primcall  eta.fibers.PrimOps.popNextC [ipv_sD0S]
                                                  of
                                                  _ [Occ=Dead]
                                                  { (#,#) ipv2_sD0W [Occ=Once] _ [Occ=Dead] ->
                                                        let {
                                                          sat_sD0Z [Occ=Once]
                                                            :: GHC.IORef.IORef
                                                                 (GHC.Base.Maybe a6_a6Q3)
                                                          [LclId, Str=] =
                                                              NO_CCS GHC.STRef.STRef! [ipv1_sD0T]; } in
                                                        let {
                                                          sat_sD10 [Occ=Once] :: GHC.Prim.Any
                                                          [LclId, Str=] =
                                                              \u srt:SRT:[] [] a9_sCW4 sat_sD0Z;
                                                        } in 
                                                          case
                                                              __primcall  eta.fibers.PrimOps.setCurrentC [sat_sD10
                                                                                                          ipv2_sD0W]
                                                          of
                                                          s5_sD11 [OS=OneShot]
                                                          { __DEFAULT ->
                                                                $sa1_sCRQ
                                                                    ipv1_sD0T
                                                                    GHC.Prim.coercionToken#
                                                                    s5_sD11;
                                                          };
                                                  };
                                            };
                                      };
                          };
                } in 
                  case
                      __primcall  eta.fibers.PrimOps.pushNextC [a7_sCRK s1_sCIG]
                  of
                  s2_sD13 [OS=OneShot]
                  { __DEFAULT ->
                        case newMutVar# [GHC.Base.Nothing s2_sD13] of _ [Occ=Dead] {
                          (#,#) ipv_sD15 [Occ=Once] ipv1_sD16 ->
                              case
                                  __primcall  eta.fibers.PrimOps.popNextC [ipv_sD15]
                              of
                              _ [Occ=Dead]
                              { (#,#) ipv2_sD19 [Occ=Once] _ [Occ=Dead] ->
                                    let {
                                      sat_sD1C [Occ=Once]
                                        :: GHC.IORef.IORef (GHC.Base.Maybe (a6_a6Q3 -> b_a6Q4))
                                      [LclId, Str=] =
                                          NO_CCS GHC.STRef.STRef! [ipv1_sD16]; } in
                                    let {
                                      sat_sD1D [Occ=Once] :: GHC.Prim.Any
                                      [LclId, Str=] =
                                          \u srt:SRT:[] [] a7_sCRK sat_sD1C;
                                    } in 
                                      case
                                          __primcall  eta.fibers.PrimOps.setCurrentC [sat_sD1D
                                                                                      ipv2_sD19]
                                      of
                                      s5_sD1E [OS=OneShot]
                                      { __DEFAULT ->
                                            $sa_sCIH ipv1_sD16 GHC.Prim.coercionToken# s5_sD1E;
                                      };
                              };
                        };
                  };
        };
a3_rCFY
  :: forall a1_a896 b_a897.
     Control.Concurrent.Fiber.Internal.Fiber a1_a896
     -> Control.Concurrent.Fiber.Internal.Fiber b_a897
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a1_a896 #)
[GblId, Arity=3, Str=<L,C(U(U,U))><L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [eta_sD1F
                                                                                  eta1_sD1G
                                                                                  eta2_sD1H]
        let {
          sat_sD1O [Occ=Once]
            :: Control.Concurrent.Fiber.Internal.Fiber (b_a897 -> a6_a896)
          [LclId, Str=] =
              \r srt:SRT:[] [s_sD1I]
                  case eta_sD1F s_sD1I of _ [Occ=Dead] {
                    (#,#) ipv_sD1K [Occ=Once] ipv1_sD1L [Occ=OnceL] ->
                        let {
                          sat_sD1N [Occ=Once] :: b_a897 -> a6_a896
                          [LclId, Str=] =
                              \r srt:SRT:[] [ds1_sD1M] ipv1_sD1L;
                        } in  (#,#) [ipv_sD1K sat_sD1N];
                  };
        } in 
          Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
              sat_sD1O eta1_sD1G eta2_sD1H;
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber1
  :: forall a1_X8IB b_X8ID c_X8IF.
     (a1_X8IB -> b_X8ID -> c_X8IF)
     -> Control.Concurrent.Fiber.Internal.Fiber a1_X8IB
     -> Control.Concurrent.Fiber.Internal.Fiber b_X8ID
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, c_X8IF #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,C(U(U,U))><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [eta_sD1P
                                                                                  eta1_sD1Q
                                                                                  eta2_sD1R
                                                                                  eta4_sD1S]
        let {
          sat_sD1Y [Occ=Once]
            :: Control.Concurrent.Fiber.Internal.Fiber (b_X8ID -> c_X8IF)
          [LclId, Str=] =
              \r srt:SRT:[] [s_sD1T]
                  case eta1_sD1Q s_sD1T of _ [Occ=Dead] {
                    (#,#) ipv_sD1V [Occ=Once] ipv1_sD1W [Occ=Once] ->
                        let {
                          sat_sD1X [Occ=Once] :: b_X8ID -> c_X8IF
                          [LclId, Str=] =
                              \u srt:SRT:[] [] eta_sD1P ipv1_sD1W;
                        } in  (#,#) [ipv_sD1V sat_sD1X];
                  };
        } in 
          Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
              sat_sD1Y eta2_sD1R eta4_sD1S;
Control.Concurrent.Fiber.Internal.$fMonoid_Fiber2
  :: forall a_X76K.
     GHC.Base.Monoid a_X76K =>
     Control.Concurrent.Fiber.Internal.Fiber a_X76K
     -> Control.Concurrent.Fiber.Internal.Fiber a_X76K
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_X76K #)
[GblId,
 Arity=4,
 Str=<L,U(A,C(U),A)><L,C(U(U,U))><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [$dMonoid_sD1Z
                                                                                  x_sD20
                                                                                  y_sD21
                                                                                  eta_sD22]
        let {
          sat_sD28 [Occ=Once]
            :: Control.Concurrent.Fiber.Internal.Fiber (a6_X76K -> a6_X76K)
          [LclId, Str=] =
              \r srt:SRT:[] [s_sD23]
                  case x_sD20 s_sD23 of _ [Occ=Dead] {
                    (#,#) ipv_sD25 [Occ=Once] ipv1_sD26 [Occ=Once] ->
                        let {
                          sat_sD27 [Occ=Once] :: a6_X76K -> a6_X76K
                          [LclId, Str=] =
                              \u srt:SRT:[] [] GHC.Base.mappend $dMonoid_sD1Z ipv1_sD26;
                        } in  (#,#) [ipv_sD25 sat_sD27];
                  };
        } in 
          Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
              sat_sD28 y_sD21 eta_sD22;
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber5
  :: forall a_a6Y2.
     Control.Concurrent.Fiber.Internal.Fiber a_a6Y2
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6Y2
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [mf_sD29 mg_sD2A s_sD2B]
        __primcall  eta.fibers.PrimOps.alternativeFiber [mf_sD29
                                                         mg_sD2A
                                                         s_sD2B];
Control.Concurrent.Fiber.Internal.$fFunctor_Fiber2
  :: forall a_a6ZW b_a6ZX.
     (a_a6ZW -> b_a6ZX)
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6ZW
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a6ZX #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*C1(U)><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [f_sD2D ds_sD2E s_sD2F]
        case ds_sD2E s_sD2F of _ [Occ=Dead] {
          (#,#) ipv_sD2H [Occ=Once] ipv1_sD2I [Occ=Once] ->
              let {
                sat_sD2J [Occ=Once] :: b_a6ZX
                [LclId, Str=] =
                    \u srt:SRT:[] [] f_sD2D ipv1_sD2I;
              } in  (#,#) [ipv_sD2H sat_sD2J];
        };
lvl_rCFZ :: [GHC.Types.Char]
[GblId, Str=] =
    \u srt:SRT:[] []
        GHC.CString.unpackCString#
            "This code should not have been reached."#;
Control.Concurrent.Fiber.Internal.block2 :: forall a_a5ZB. a_a5ZB
[GblId, Str=b] =
    \u srt:SRT:[05 :-> GHC.Err.error, rCFZ :-> lvl_rCFZ] []
        GHC.Err.error lvl_rCFZ;
lvl1_rCG0 :: [GHC.Types.Char]
[GblId, Str=] =
    \u srt:SRT:[] []
        GHC.CString.unpackCString#
            "Attempted to extract a value from a Fiber's yield or block."#;
Control.Concurrent.Fiber.Internal.block3 :: GHC.Prim.Any
[GblId, Str=b] =
    \u srt:SRT:[05 :-> GHC.Err.error, rCG0 :-> lvl1_rCG0] []
        GHC.Err.error lvl1_rCG0;
lvl2_rCG1 :: [GHC.Types.Char]
[GblId, Str=] =
    \u srt:SRT:[] []
        GHC.CString.unpackCString#
            "You cannot yield or block as the last action of a Fiber."#;
Control.Concurrent.Fiber.Internal.block4 :: forall a_a5ZB. a_a5ZB
[GblId, Str=b] =
    \u srt:SRT:[05 :-> GHC.Err.error, rCG1 :-> lvl2_rCG1] []
        GHC.Err.error lvl2_rCG1;
Control.Concurrent.Fiber.Internal.yield'1
  :: forall a_a5ZB.
     GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a5ZB #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCFB :-> Control.Concurrent.Fiber.Internal.block2,
                rCFC :-> Control.Concurrent.Fiber.Internal.block3,
                rCFD :-> Control.Concurrent.Fiber.Internal.block4] [block5_sD2K
                                                                    s_sD2L]
        case
            __primcall  eta.fibers.PrimOps.popContStack [s_sD2L]
        of
        _ [Occ=Dead]
        { (#,,#) ipv_sD2O [Occ=Once*]
                 ipv1_sD2P [Occ=Once!]
                 ipv2_sD2Q [Occ=Once] ->
              case ipv1_sD2P of _ [Occ=Dead] {
                __DEFAULT ->
                    (#,#) [ipv_sD2O Control.Concurrent.Fiber.Internal.block4];
                1 ->
                    let {
                      sat_sD2T [Occ=Once] :: GHC.Prim.Any
                      [LclId, Str=] =
                          \u srt:SRT:[rCFC :-> Control.Concurrent.Fiber.Internal.block3] []
                              ipv2_sD2Q Control.Concurrent.Fiber.Internal.block3;
                    } in 
                      case
                          __primcall  eta.fibers.PrimOps.setCurrentC [sat_sD2T ipv_sD2O]
                      of
                      s2_sD2U [OS=OneShot]
                      { __DEFAULT ->
                            case
                                case block5_sD2K of sat_sD2W {
                                  __DEFAULT -> dataToTag# [sat_sD2W];
                                }
                            of
                            sat_sD2X
                            { __DEFAULT ->
                                  case
                                      __primcall  eta.fibers.PrimOps.yieldFiber [sat_sD2X s2_sD2U]
                                  of
                                  wild_sD2Y [OS=OneShot]
                                  { __DEFAULT ->
                                        (#,#) [wild_sD2Y Control.Concurrent.Fiber.Internal.block2];
                                  };
                            };
                      };
              };
        };
Control.Concurrent.Fiber.Internal.yield1
  :: forall a_a5ZR.
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a5ZR #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCFB :-> Control.Concurrent.Fiber.Internal.block2,
                rCFC :-> Control.Concurrent.Fiber.Internal.block3,
                rCFD :-> Control.Concurrent.Fiber.Internal.block4] [s_sD2Z]
        case
            __primcall  eta.fibers.PrimOps.popContStack [s_sD2Z]
        of
        _ [Occ=Dead]
        { (#,,#) ipv_sD32 [Occ=Once*]
                 ipv1_sD33 [Occ=Once!]
                 ipv2_sD34 [Occ=Once] ->
              case ipv1_sD33 of _ [Occ=Dead] {
                __DEFAULT ->
                    (#,#) [ipv_sD32 Control.Concurrent.Fiber.Internal.block4];
                1 ->
                    let {
                      sat_sD37 [Occ=Once] :: GHC.Prim.Any
                      [LclId, Str=] =
                          \u srt:SRT:[rCFC :-> Control.Concurrent.Fiber.Internal.block3] []
                              ipv2_sD34 Control.Concurrent.Fiber.Internal.block3;
                    } in 
                      case
                          __primcall  eta.fibers.PrimOps.setCurrentC [sat_sD37 ipv_sD32]
                      of
                      s2_sD38 [OS=OneShot]
                      { __DEFAULT ->
                            case
                                __primcall  eta.fibers.PrimOps.yieldFiber [0 s2_sD38]
                            of
                            wild_sD3A [OS=OneShot]
                            { __DEFAULT ->
                                  (#,#) [wild_sD3A Control.Concurrent.Fiber.Internal.block2];
                            };
                      };
              };
        };
Control.Concurrent.Fiber.Internal.block1
  :: forall a_a5ZJ.
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a5ZJ #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCFB :-> Control.Concurrent.Fiber.Internal.block2,
                rCFC :-> Control.Concurrent.Fiber.Internal.block3,
                rCFD :-> Control.Concurrent.Fiber.Internal.block4] [s_sD3B]
        case
            __primcall  eta.fibers.PrimOps.popContStack [s_sD3B]
        of
        _ [Occ=Dead]
        { (#,,#) ipv_sD3E [Occ=Once*]
                 ipv1_sD3F [Occ=Once!]
                 ipv2_sD3G [Occ=Once] ->
              case ipv1_sD3F of _ [Occ=Dead] {
                __DEFAULT ->
                    (#,#) [ipv_sD3E Control.Concurrent.Fiber.Internal.block4];
                1 ->
                    let {
                      sat_sD3J [Occ=Once] :: GHC.Prim.Any
                      [LclId, Str=] =
                          \u srt:SRT:[rCFC :-> Control.Concurrent.Fiber.Internal.block3] []
                              ipv2_sD3G Control.Concurrent.Fiber.Internal.block3;
                    } in 
                      case
                          __primcall  eta.fibers.PrimOps.setCurrentC [sat_sD3J ipv_sD3E]
                      of
                      s2_sD3K [OS=OneShot]
                      { __DEFAULT ->
                            case
                                __primcall  eta.fibers.PrimOps.yieldFiber [1 s2_sD3K]
                            of
                            wild_sD3M [OS=OneShot]
                            { __DEFAULT ->
                                  (#,#) [wild_sD3M Control.Concurrent.Fiber.Internal.block2];
                            };
                      };
              };
        };
Control.Concurrent.Fiber.Internal.$fException_Empty1
  :: [GHC.Types.Char]
[GblId, Str=] =
    \u srt:SRT:[] [] GHC.CString.unpackCString# "Empty"#;
Control.Concurrent.Fiber.Internal.$fMonad_Fiber_$s$dmfail
  :: forall a_a6PK.
     GHC.Base.String -> Control.Concurrent.Fiber.Internal.Fiber a_a6PK
[GblId, Arity=1, Str=<B,U>b, Unf=OtherCon []] =
    \r srt:SRT:[05 :-> GHC.Err.error] [eta_sD3N]
        GHC.Err.error eta_sD3N;
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber_$sliftA2
  :: forall a1_a8I7 b_a8I8 c_a8I9.
     (a1_a8I7 -> b_a8I8 -> c_a8I9)
     -> Control.Concurrent.Fiber.Internal.Fiber a1_a8I7
     -> Control.Concurrent.Fiber.Internal.Fiber b_a8I8
     -> Control.Concurrent.Fiber.Internal.Fiber c_a8I9
[GblId,
 Arity=4,
 Str=<L,C(U)><L,C(U(U,U))><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCDZ :-> Control.Concurrent.Fiber.Internal.$fApplicative_Fiber1] [eta_B4
                                                                                  eta_B3
                                                                                  eta_B2
                                                                                  eta_B1]
        Control.Concurrent.Fiber.Internal.$fApplicative_Fiber1
            eta_B4 eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber_$s$dm<*
  :: forall a_a6WA b_a6WB.
     Control.Concurrent.Fiber.Internal.Fiber a_a6WA
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6WB
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6WA
[GblId, Arity=3, Str=<L,C(U(U,U))><L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCFY :-> a3_rCFY] [eta_B3 eta_B2 eta_B1]
        a3_rCFY eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.catchf1
  :: forall a_a5YO e_a5YP.
     GHC.Exception.Exception e_a5YP =>
     Control.Concurrent.Fiber.Internal.Fiber a_a5YO
     -> (e_a5YP -> Control.Concurrent.Fiber.Internal.Fiber a_a5YO)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a5YO #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,1*U(A,A,A,1*C1(U),A)><L,1*C1(U)><L,1*C1(C1(U))><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [$dException_sD3O ds_sD3P exc_sD3Q eta_sD3R]
        let {
          sat_sD3W [Occ=Once]
            :: GHC.Exception.SomeException
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a6_a5YO #)
          [LclId, Str=] =
              \r srt:SRT:[] [e1_sD3S]
                  case
                      GHC.Exception.fromException $dException_sD3O e1_sD3S
                  of
                  _ [Occ=Dead]
                  { GHC.Base.Nothing ->
                        let {
                          sat_sD3U [Occ=Once]
                            :: GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a6_a5YO #)
                          [LclId, Str=] =
                              \r srt:SRT:[] [eta_B1] raiseIO# [e1_sD3S eta_B1];
                        } in  sat_sD3U;
                    GHC.Base.Just e'_sD3V [Occ=Once] -> exc_sD3Q e'_sD3V;
                  };
        } in  catch# [ds_sD3P sat_sD3W eta_sD3R];
Control.Concurrent.Fiber.Internal.$fShow_Empty1
  :: Control.Concurrent.Fiber.Internal.Empty -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*H><L,1*U>, Unf=OtherCon []] =
    \r srt:SRT:[rCEB :-> Control.Concurrent.Fiber.Internal.$fException_Empty1] [ds_sD3X
                                                                                eta_sD3Y]
        case ds_sD3X of _ [Occ=Dead] {
          Control.Concurrent.Fiber.Internal.Empty ->
              GHC.Base.++
                  Control.Concurrent.Fiber.Internal.$fException_Empty1 eta_sD3Y;
        };
Control.Concurrent.Fiber.Internal.$fMonadIO_Fiber1
  :: forall a_a6N1. GHC.Types.IO a_a6N1 -> GHC.Types.IO a_a6N1
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    \r srt:SRT:[] [ds_sD40] ds_sD40;
Control.Concurrent.Fiber.Internal.unFiber1
  :: forall a_a4UC.
     Control.Concurrent.Fiber.Internal.Fiber a_a4UC
     -> Control.Concurrent.Fiber.Internal.Fiber a_a4UC
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    \r srt:SRT:[] [ds_sD41] ds_sD41;
Control.Concurrent.Fiber.Internal.catchf
  :: forall a_a48Q e_a48R.
     GHC.Exception.Exception e_a48R =>
     Control.Concurrent.Fiber.Internal.Fiber a_a48Q
     -> (e_a48R -> Control.Concurrent.Fiber.Internal.Fiber a_a48Q)
     -> Control.Concurrent.Fiber.Internal.Fiber a_a48Q
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,1*U(A,A,A,1*C1(U),A)><L,1*C1(U)><L,1*C1(C1(U))><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B4 eta_B3 eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.catchf1
            eta_B4 eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.delEvent :: GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.delEvent1 eta_B1;
Control.Concurrent.Fiber.Internal.getEvent
  :: forall a_a48S. GHC.Types.IO (GHC.Base.Maybe a_a48S)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.getEvent1 eta_B1;
Control.Concurrent.Fiber.Internal.setEvent
  :: forall a_a640. a_a640 -> GHC.Types.IO ()
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.setEvent1 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.forkFiber
  :: Control.Concurrent.Fiber.Internal.Fiber ()
     -> GHC.Types.IO GHC.Conc.Sync.ThreadId
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.forkFiber1 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.yield'
  :: forall a_a48T.
     GHC.Types.Bool -> Control.Concurrent.Fiber.Internal.Fiber a_a48T
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCFU :-> Control.Concurrent.Fiber.Internal.yield'1] [eta_B2
                                                                     eta_B1]
        Control.Concurrent.Fiber.Internal.yield'1 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.block
  :: forall a_a48U. Control.Concurrent.Fiber.Internal.Fiber a_a48U
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCFA :-> Control.Concurrent.Fiber.Internal.block1] [eta_B1]
        Control.Concurrent.Fiber.Internal.block1 eta_B1;
Control.Concurrent.Fiber.Internal.yield
  :: forall a_a48V. Control.Concurrent.Fiber.Internal.Fiber a_a48V
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCFT :-> Control.Concurrent.Fiber.Internal.yield1] [eta_B1]
        Control.Concurrent.Fiber.Internal.yield1 eta_B1;
Control.Concurrent.Fiber.Internal.unlift
  :: forall a_a66M.
     Control.Concurrent.Fiber.Internal.Fiber a_a66M
     -> GHC.Types.IO a_a66M
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.unFiber1 eta_B1;
Control.Concurrent.Fiber.Internal.getCurrent
  :: GHC.Types.IO GHC.Prim.Any
[GblId, Arity=1, Caf=NoCafRefs, Str=, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.getCurrentC [eta_B1];
Control.Concurrent.Fiber.Internal.getStack
  :: GHC.Types.IO Control.Concurrent.Fiber.Internal.Obj
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.getStack1 eta_B1;
Control.Concurrent.Fiber.Internal.topStack
  :: GHC.Types.IO GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.topStack1 eta_B1;
Control.Concurrent.Fiber.Internal.runFiberWithBlock
  :: forall a_a4E4.
     Control.Concurrent.Fiber.Internal.Fiber a_a4E4
     -> GHC.Types.IO
          (Data.Either.Either
             (GHC.Types.Bool, Control.Concurrent.Fiber.Internal.Fiber a_a4E4)
             a_a4E4)
[GblId, Arity=1, Str=<B,A>b, Unf=OtherCon []] =
    \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sD43] GHC.Err.undefined;
Control.Concurrent.Fiber.Internal.runFiber
  :: forall a_a4HZ.
     Control.Concurrent.Fiber.Internal.Fiber a_a4HZ
     -> GHC.Types.IO
          (Data.Either.Either
             (Control.Concurrent.Fiber.Internal.Fiber a_a4HZ) a_a4HZ)
[GblId, Arity=1, Str=<B,A>b, Unf=OtherCon []] =
    \r srt:SRT:[04B :-> GHC.Err.undefined] [ds_sD44] GHC.Err.undefined;
Control.Concurrent.Fiber.Internal.throwEmpty
  :: forall a_a4I0. GHC.Types.IO a_a4I0
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta_B1]
        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6 eta_B1;
Control.Concurrent.Fiber.Internal.catchEmpty
  :: forall (m_a4I1 :: * -> *) a_a4I2.
     GHC.Base.Monad m_a4I1 =>
     m_a4I1 a_a4I2 -> m_a4I1 a_a4I2 -> m_a4I1 a_a4I2
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B3 eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.catchEmpty2 eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.getCurrentC#
  :: forall s_a4TW[sk].
     GHC.Prim.State# s_a4TW[sk]
     -> (# GHC.Prim.State# s_a4TW[sk], GHC.Prim.Any #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.getCurrentC [eta_B1];
Control.Concurrent.Fiber.Internal.setCurrentC#
  :: forall s_a4TV[sk].
     GHC.Prim.Any
     -> GHC.Prim.State# s_a4TV[sk] -> GHC.Prim.State# s_a4TV[sk]
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        __primcall  eta.fibers.PrimOps.setCurrentC [eta_B2 eta_B1];
Control.Concurrent.Fiber.Internal.pushNextC#
  :: forall s_a4TU[sk].
     GHC.Prim.Any
     -> GHC.Prim.State# s_a4TU[sk] -> GHC.Prim.State# s_a4TU[sk]
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        __primcall  eta.fibers.PrimOps.pushNextC [eta_B2 eta_B1];
Control.Concurrent.Fiber.Internal.popNextC#
  :: forall s_a4TT[sk].
     GHC.Prim.State# s_a4TT[sk]
     -> (# GHC.Prim.State# s_a4TT[sk], GHC.Prim.Any #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.popNextC [eta_B1];
Control.Concurrent.Fiber.Internal.popContStack#
  :: forall s_a4TS[sk].
     GHC.Prim.State# s_a4TS[sk]
     -> (# GHC.Prim.State# s_a4TS[sk], GHC.Prim.Int#, GHC.Prim.Any #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.popContStack [eta_B1];
Control.Concurrent.Fiber.Internal.yieldFiber#
  :: forall s_a4TR[sk].
     GHC.Prim.Int#
     -> GHC.Prim.State# s_a4TR[sk] -> GHC.Prim.State# s_a4TR[sk]
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        __primcall  eta.fibers.PrimOps.yieldFiber [eta_B2 eta_B1];
Control.Concurrent.Fiber.Internal.getEvent#
  :: forall s_a4TP[sk] a_a4TQ[sk].
     GHC.Prim.State# s_a4TP[sk]
     -> (# GHC.Prim.State# s_a4TP[sk], GHC.Prim.Int#, a_a4TQ[sk] #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.getEventCC [eta_B1];
Control.Concurrent.Fiber.Internal.setEvent#
  :: forall s_a4TO[sk].
     GHC.Prim.Any
     -> GHC.Prim.State# s_a4TO[sk] -> GHC.Prim.State# s_a4TO[sk]
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        __primcall  eta.fibers.PrimOps.setEventC [eta_B2 eta_B1];
Control.Concurrent.Fiber.Internal.delEvent#
  :: forall s_a4TN[sk].
     GHC.Prim.State# s_a4TN[sk] -> GHC.Prim.State# s_a4TN[sk]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.delEventCC [eta_B1];
Control.Concurrent.Fiber.Internal.getTSO#
  :: forall s_a4TM[sk].
     GHC.Prim.State# s_a4TM[sk]
     -> (# GHC.Prim.State# s_a4TM[sk], GHC.Prim.ThreadId# #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.getTSOC [eta_B1];
Control.Concurrent.Fiber.Internal.setContStack#
  :: forall s_a4TL[sk].
     GHC.Prim.Int#
     -> GHC.Prim.Object# GHC.Types.Object
     -> GHC.Prim.Any
     -> GHC.Prim.State# s_a4TL[sk]
     -> GHC.Prim.State# s_a4TL[sk]
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B4 eta_B3 eta_B2 eta_B1]
        __primcall  eta.fibers.PrimOps.setContStack [eta_B4
                                                     eta_B3
                                                     eta_B2
                                                     eta_B1];
Control.Concurrent.Fiber.Internal.topStack#
  :: forall s_a4TK[sk].
     GHC.Prim.State# s_a4TK[sk]
     -> (# GHC.Prim.State# s_a4TK[sk], GHC.Prim.Int# #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.topStackC [eta_B1];
Control.Concurrent.Fiber.Internal.getStack#
  :: forall s_a4TJ[sk].
     GHC.Prim.State# s_a4TJ[sk]
     -> (# GHC.Prim.State# s_a4TJ[sk],
           GHC.Prim.Object# GHC.Types.Object #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.getStackC [eta_B1];
Control.Concurrent.Fiber.Internal.setTopStack#
  :: forall s_a4TI[sk].
     GHC.Prim.Int#
     -> GHC.Prim.State# s_a4TI[sk] -> GHC.Prim.State# s_a4TI[sk]
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        __primcall  eta.fibers.PrimOps.setTopStackC [eta_B2 eta_B1];
Control.Concurrent.Fiber.Internal.alternativeFiber#
  :: forall s_a4TH[sk].
     GHC.Prim.Any
     -> GHC.Prim.Any
     -> GHC.Prim.State# s_a4TH[sk]
     -> (# GHC.Prim.State# s_a4TH[sk], GHC.Prim.Any #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B3 eta_B2 eta_B1]
        __primcall  eta.fibers.PrimOps.alternativeFiber [eta_B3
                                                         eta_B2
                                                         eta_B1];
Control.Concurrent.Fiber.Internal.throwEmpty#
  :: forall s_a4TG[sk].
     GHC.Prim.State# s_a4TG[sk] -> GHC.Prim.State# s_a4TG[sk]
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        __primcall  eta.fibers.PrimOps.throwEmpty [eta_B1];
Control.Concurrent.Fiber.Internal.unFiber
  :: forall a_a48P.
     Control.Concurrent.Fiber.Internal.Fiber a_a48P
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a48P #)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.unFiber1 eta_B1;
Control.Concurrent.Fiber.Internal.$fException_Empty2
  :: Data.Typeable.Internal.TypeRep
[GblId, Str=m] =
    \u srt:SRT:[] []
        case "fibers-dev-0.1.0.0-4M09dDcCKPp6W4Oc7lAViq"# of a6_sD4L {
          __DEFAULT ->
              let {
                ww2_sD4M [Occ=Once] :: GHC.Base.String
                [LclId, Str=] =
                    \u srt:SRT:[] [] GHC.CString.unpackCString# a6_sD4L;
              } in 
                case "Control.Concurrent.Fiber.Internal"# of a7_sD4N {
                  __DEFAULT ->
                      let {
                        ww3_sD4O [Occ=Once] :: GHC.Base.String
                        [LclId, Str=] =
                            \u srt:SRT:[] [] GHC.CString.unpackCString# a7_sD4N;
                      } in 
                        case "Empty"# of a8_sD4P {
                          __DEFAULT ->
                              let {
                                ww4_sD4Q [Occ=Once] :: GHC.Base.String
                                [LclId, Str=] =
                                    \u srt:SRT:[] [] GHC.CString.unpackCString# a8_sD4P; } in
                              let {
                                wild_sD4R [Occ=Once] :: Data.Typeable.Internal.TyCon
                                [LclId, Str=, Unf=OtherCon []] =
                                    NO_CCS Data.Typeable.Internal.TyCon! [__word64 8876078581063674855
                                                                          __word64 15964071736263936320
                                                                          ww2_sD4M
                                                                          ww3_sD4O
                                                                          ww4_sD4Q];
                              } in 
                                Data.Typeable.Internal.TypeRep [__word64 8876078581063674855
                                                                __word64 15964071736263936320
                                                                wild_sD4R
                                                                GHC.Types.[]
                                                                GHC.Types.[]];
                        };
                };
        };
Control.Concurrent.Fiber.Internal.$fException_Empty4
  :: GHC.Prim.Proxy# Control.Concurrent.Fiber.Internal.Empty
     -> Data.Typeable.Internal.TypeRep
[GblId, Arity=1, Str=<L,A>m, Unf=OtherCon []] =
    \r srt:SRT:[rCED :-> Control.Concurrent.Fiber.Internal.$fException_Empty2] [wild_sD4S]
        Control.Concurrent.Fiber.Internal.$fException_Empty2;
Control.Concurrent.Fiber.Internal.$fFunctor_Fiber1
  :: forall a1_a88Y b_a88Z.
     a1_a88Y
     -> Control.Concurrent.Fiber.Internal.Fiber b_a88Z
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a1_a88Y #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><C(S(SL)),1*C1(U(U,A))><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_sD4T eta1_sD4U eta2_sD4V]
        case eta1_sD4U eta2_sD4V of _ [Occ=Dead] {
          (#,#) ipv_sD4X [Occ=Once] _ [Occ=Dead] ->
              (#,#) [ipv_sD4X eta_sD4T];
        };
Control.Concurrent.Fiber.Internal.$fFunctor_Fiber_$c<$
  :: forall a_a706 b_a707.
     a_a706
     -> Control.Concurrent.Fiber.Internal.Fiber b_a707
     -> Control.Concurrent.Fiber.Internal.Fiber a_a706
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><C(S(SL)),1*C1(U(U,A))><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B3 eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.$fFunctor_Fiber1
            eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber2
  :: forall a1_a89H b_a89I.
     Control.Concurrent.Fiber.Internal.Fiber a1_a89H
     -> Control.Concurrent.Fiber.Internal.Fiber b_a89I
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a89I #)
[GblId, Arity=3, Str=<L,C(U(U,A))><L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [eta_sD4Z
                                                                                  eta1_sD50
                                                                                  eta2_sD51]
        let {
          sat_sD56 [Occ=Once]
            :: Control.Concurrent.Fiber.Internal.Fiber (b_a89I -> b_a89I)
          [LclId, Str=] =
              \r srt:SRT:[] [eta3_sD52]
                  case eta_sD4Z eta3_sD52 of _ [Occ=Dead] {
                    (#,#) ipv_sD54 [Occ=Once] _ [Occ=Dead] ->
                        (#,#) [ipv_sD54 GHC.Base.id];
                  };
        } in 
          Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
              sat_sD56 eta1_sD50 eta2_sD51;
Control.Concurrent.Fiber.Internal.$fFunctor_Fiber_$cfmap
  :: forall a_a6ZU b_a6ZV.
     (a_a6ZU -> b_a6ZV)
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6ZU
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6ZV
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*C1(U)><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B3 eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.$fFunctor_Fiber2
            eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fFunctor_Fiber [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Base.Functor Control.Concurrent.Fiber.Internal.Fiber
[GblId[DFunId], Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    NO_CCS GHC.Base.D:Functor! [Control.Concurrent.Fiber.Internal.$fFunctor_Fiber2
                                Control.Concurrent.Fiber.Internal.$fFunctor_Fiber1];
Control.Concurrent.Fiber.Internal.$fException_Empty_$cfromException
  :: GHC.Exception.SomeException
     -> GHC.Base.Maybe Control.Concurrent.Fiber.Internal.Empty
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    \r srt:SRT:[rCED :-> Control.Concurrent.Fiber.Internal.$fException_Empty2] [eta_sD57]
        case eta_sD57 of _ [Occ=Dead] {
          GHC.Exception.SomeException $dException1_sD59 [Occ=Once]
                                      e2_sD5A [Occ=Once] ->
              case
                  GHC.Exception.$p1Exception $dException1_sD59 GHC.Prim.proxy#
              of
              _ [Occ=Dead]
              { Data.Typeable.Internal.TypeRep dt_sD5C [Occ=Once]
                                               dt1_sD5D [Occ=Once]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead]
                                               _ [Occ=Dead] ->
                    case
                        Control.Concurrent.Fiber.Internal.$fException_Empty2
                    of
                    _ [Occ=Dead]
                    { Data.Typeable.Internal.TypeRep dt2_sD5I [Occ=Once]
                                                     dt3_sD5J [Occ=Once]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead]
                                                     _ [Occ=Dead] ->
                          case eqWord64# [dt_sD5C dt2_sD5I] of _ [Occ=Dead] {
                            __DEFAULT -> GHC.Base.Nothing [];
                            1 ->
                                case eqWord64# [dt1_sD5D dt3_sD5J] of _ [Occ=Dead] {
                                  __DEFAULT -> GHC.Base.Nothing [];
                                  1 -> GHC.Base.Just [e2_sD5A];
                                };
                          };
                    };
              };
        };
Control.Concurrent.Fiber.Internal.$fException_Empty3
  :: Data.Typeable.Internal.Typeable
       Control.Concurrent.Fiber.Internal.Empty
[GblId, Arity=1, Str=<L,A>m, Unf=OtherCon []] =
    \r srt:SRT:[rCEJ :-> Control.Concurrent.Fiber.Internal.$fException_Empty4] [eta_B1]
        Control.Concurrent.Fiber.Internal.$fException_Empty4 eta_B1;
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber1
  :: forall a1_a89P.
     Control.Concurrent.Fiber.Internal.Fiber a1_a89P
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a1_a89P] #)
[GblId, Arity=2, Str=<L,C(U(U,U))><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [eta_sD5P
                                                                                  eta1_sD5Q]
        let {
          a7_sD5R [Occ=LoopBreaker]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
          [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
              \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [s_sD5S]
                  let {
                    sat_sD5Z [Occ=Once]
                      :: Control.Concurrent.Fiber.Internal.Fiber ([a6_a89P] -> [a6_a89P])
                    [LclId, Str=] =
                        \r srt:SRT:[] [s1_sD5U]
                            case eta_sD5P s1_sD5U of _ [Occ=Dead] {
                              (#,#) ipv_sD5W [Occ=Once] ipv1_sD5X [Occ=OnceL] ->
                                  let {
                                    sat_sD5Y [Occ=Once] :: [a6_a89P] -> [a6_a89P]
                                    [LclId, Str=] =
                                        \r srt:SRT:[] [eta_B1] : [ipv1_sD5X eta_B1];
                                  } in  (#,#) [ipv_sD5W sat_sD5Y];
                            }; } in
                  let {
                    sat_sD60 [Occ=Once] :: GHC.Prim.Any
                    [LclId, Str=] =
                        \u srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] []
                            Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
                                sat_sD5Z a7_sD5R;
                  } in 
                    __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sD60
                                                                     Control.Concurrent.Fiber.Internal.$fAlternative_Fiber2
                                                                     s_sD5S];
        } in  a7_sD5R eta1_sD5Q;
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber_$cmany
  :: forall a_a6YZ.
     Control.Concurrent.Fiber.Internal.Fiber a_a6YZ
     -> Control.Concurrent.Fiber.Internal.Fiber [a_a6YZ]
[GblId, Arity=2, Str=<L,C(U(U,U))><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDO :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber1] [eta_B2
                                                                                  eta_B1]
        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber1
            eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber4
  :: forall a1_a89V.
     Control.Concurrent.Fiber.Internal.Fiber a1_a89V
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a1_a89V] #)
[GblId, Arity=2, Str=<L,C(U(U,U))><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [eta_sD61
                                                                                  eta1_sD62]
        let {
          a7_sD63 [Occ=Once]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a6_a89V] -> [a6_a89V] #)
          [LclId,
           Arity=1,
           Str=<S,U> {a89W-><C(S(SL)),1*C1(U(U,U))>},
           Unf=OtherCon []] =
              \r srt:SRT:[] [s_sD64]
                  case eta_sD61 s_sD64 of _ [Occ=Dead] {
                    (#,#) ipv_sD66 [Occ=Once] ipv1_sD67 [Occ=OnceL] ->
                        let {
                          sat_sD68 [Occ=Once] :: [a6_a89V] -> [a6_a89V]
                          [LclId, Str=] =
                              \r srt:SRT:[] [eta_B1] : [ipv1_sD67 eta_B1];
                        } in  (#,#) [ipv_sD66 sat_sD68];
                  }; } in
        let {
          a8_sD69 [Occ=Once]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any #)
          [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
              \r srt:SRT:[] [s_sD6B]
                  __primcall  eta.fibers.PrimOps.alternativeFiber [a9_sD6A
                                                                   Control.Concurrent.Fiber.Internal.$fAlternative_Fiber2
                                                                   s_sD6B];
          a9_sD6A [Occ=LoopBreaker]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a6_a89V] #)
          [LclId, Arity=1, Str=, Unf=OtherCon []] =
              \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [eta_B1]
                  Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
                      a7_sD63 a8_sD69 eta_B1;
        } in  a9_sD6A eta1_sD62;
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber_$csome
  :: forall a_a6YR.
     Control.Concurrent.Fiber.Internal.Fiber a_a6YR
     -> Control.Concurrent.Fiber.Internal.Fiber [a_a6YR]
[GblId, Arity=2, Str=<L,C(U(U,U))><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDS :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber4] [eta_B2
                                                                                  eta_B1]
        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber4
            eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber_$c<|>
  :: forall a_a6VI.
     Control.Concurrent.Fiber.Internal.Fiber a_a6VI
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6VI
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6VI
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B3 eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber5
            eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber_$cempty
  :: forall a_a6RV. Control.Concurrent.Fiber.Internal.Fiber a_a6RV
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [eta_B1]
        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6 eta_B1;
Control.Concurrent.Fiber.Internal.$fMonoid_Fiber1
  :: forall a_X76R.
     GHC.Base.Monoid a_X76R =>
     [Control.Concurrent.Fiber.Internal.Fiber a_X76R]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_X76R #)
[GblId,
 Arity=3,
 Str=<L,U(U,C(U),A)><S,1*U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [$dMonoid_sD6D
                                                                                  eta_sD6E
                                                                                  eta1_sD6F]
        let {
          lvl3_sD6G [Occ=OnceL] :: a6_X76R
          [LclId, Str=] =
              \u srt:SRT:[] [] GHC.Base.mempty $dMonoid_sD6D; } in
        let {
          a7_sD6H [Occ=LoopBreaker]
            :: [Control.Concurrent.Fiber.Internal.Fiber a6_X76R]
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a6_X76R #)
          [LclId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
              sat-only \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [ds_sD6I
                                                                                                     eta2_sD6J]
                  case ds_sD6I of _ [Occ=Dead] {
                    [] -> (#,#) [eta2_sD6J lvl3_sD6G];
                    : y_sD6L [Occ=Once] ys_sD6M [Occ=Once] ->
                        let {
                          sat_sD6T [Occ=Once]
                            :: Control.Concurrent.Fiber.Internal.Fiber a6_X76R
                          [LclId, Str=] =
                              \r srt:SRT:[] [eta_B1] a7_sD6H ys_sD6M eta_B1; } in
                        let {
                          sat_sD6S [Occ=Once]
                            :: Control.Concurrent.Fiber.Internal.Fiber (a6_X76R -> a6_X76R)
                          [LclId, Str=] =
                              \r srt:SRT:[] [s_sD6N]
                                  case y_sD6L s_sD6N of _ [Occ=Dead] {
                                    (#,#) ipv_sD6P [Occ=Once] ipv1_sD6Q [Occ=Once] ->
                                        let {
                                          sat_sD6R [Occ=Once] :: a6_X76R -> a6_X76R
                                          [LclId, Str=] =
                                              \u srt:SRT:[] []
                                                  GHC.Base.mappend $dMonoid_sD6D ipv1_sD6Q;
                                        } in  (#,#) [ipv_sD6P sat_sD6R];
                                  };
                        } in 
                          Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
                              sat_sD6S sat_sD6T eta2_sD6J;
                  };
        } in  a7_sD6H eta_sD6E eta1_sD6F;
Control.Concurrent.Fiber.Internal.$fMonoid_Fiber_$cmconcat
  :: forall a_a6WE.
     GHC.Base.Monoid a_a6WE =>
     [Control.Concurrent.Fiber.Internal.Fiber a_a6WE]
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6WE
[GblId,
 Arity=3,
 Str=<L,U(U,C(U),A)><S,1*U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCER :-> Control.Concurrent.Fiber.Internal.$fMonoid_Fiber1] [eta_B3
                                                                             eta_B2
                                                                             eta_B1]
        Control.Concurrent.Fiber.Internal.$fMonoid_Fiber1
            eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fMonoid_Fiber_$cmappend
  :: forall a_a6WE.
     GHC.Base.Monoid a_a6WE =>
     Control.Concurrent.Fiber.Internal.Fiber a_a6WE
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6WE
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6WE
[GblId,
 Arity=4,
 Str=<L,U(A,C(U),A)><L,C(U(U,U))><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCET :-> Control.Concurrent.Fiber.Internal.$fMonoid_Fiber2] [eta_B4
                                                                             eta_B3
                                                                             eta_B2
                                                                             eta_B1]
        Control.Concurrent.Fiber.Internal.$fMonoid_Fiber2
            eta_B4 eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fMonoid_Fiber_$cmempty
  :: forall a_a6WE.
     GHC.Base.Monoid a_a6WE =>
     Control.Concurrent.Fiber.Internal.Fiber a_a6WE
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(1*U,A,A)><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.$fMonoid_Fiber3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fMonoid_Fiber [InlPrag=[ALWAYS] CONLIKE]
  :: forall a_a4W2.
     GHC.Base.Monoid a_a4W2 =>
     GHC.Base.Monoid (Control.Concurrent.Fiber.Internal.Fiber a_a4W2)
[GblId[DFunId], Arity=1, Str=<L,U(U,C(U),A)>m, Unf=OtherCon []] =
    \r srt:SRT:[rCER :-> Control.Concurrent.Fiber.Internal.$fMonoid_Fiber1,
                rCET :-> Control.Concurrent.Fiber.Internal.$fMonoid_Fiber2] [$dMonoid_sD6U]
        let {
          sat_sD6Z [Occ=Once]
            :: [Control.Concurrent.Fiber.Internal.Fiber a6_X76Q]
               -> Control.Concurrent.Fiber.Internal.Fiber a6_X76Q
          [LclId, Str=] =
              \r srt:SRT:[rCER :-> Control.Concurrent.Fiber.Internal.$fMonoid_Fiber1] [eta_B2
                                                                                       eta_B1]
                  Control.Concurrent.Fiber.Internal.$fMonoid_Fiber1
                      $dMonoid_sD6U eta_B2 eta_B1; } in
        let {
          sat_sD6Y [Occ=Once]
            :: Control.Concurrent.Fiber.Internal.Fiber a6_X76Q
               -> Control.Concurrent.Fiber.Internal.Fiber a6_X76Q
               -> Control.Concurrent.Fiber.Internal.Fiber a6_X76Q
          [LclId, Str=] =
              \r srt:SRT:[rCET :-> Control.Concurrent.Fiber.Internal.$fMonoid_Fiber2] [eta_B3
                                                                                       eta_B2
                                                                                       eta_B1]
                  Control.Concurrent.Fiber.Internal.$fMonoid_Fiber2
                      $dMonoid_sD6U eta_B3 eta_B2 eta_B1; } in
        let {
          sat_sD6X [Occ=Once]
            :: Control.Concurrent.Fiber.Internal.Fiber a6_X76Q
          [LclId, Str=] =
              \r srt:SRT:[] [s_sD6V]
                  let {
                    sat_sD6W [Occ=Once] :: a6_X76Q
                    [LclId, Str=] =
                        \u srt:SRT:[] [] GHC.Base.mempty $dMonoid_sD6U;
                  } in  (#,#) [s_sD6V sat_sD6W];
        } in  GHC.Base.D:Monoid [sat_sD6X sat_sD6Y sat_sD6Z];
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber_$c*>
  :: forall a_a6VU b_a6VV.
     Control.Concurrent.Fiber.Internal.Fiber a_a6VU
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6VV
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6VV
[GblId, Arity=3, Str=<L,C(U(U,A))><L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCE1 :-> Control.Concurrent.Fiber.Internal.$fApplicative_Fiber2] [eta_B3
                                                                                  eta_B2
                                                                                  eta_B1]
        Control.Concurrent.Fiber.Internal.$fApplicative_Fiber2
            eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber_$c<*>
  :: forall a_a6Q1 b_a6Q2.
     Control.Concurrent.Fiber.Internal.Fiber (a_a6Q1 -> b_a6Q2)
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6Q1
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6Q2
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDQ :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3] [eta_B3
                                                                                  eta_B2
                                                                                  eta_B1]
        Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
            eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber_$cpure
  :: forall a_a6PQ.
     a_a6PQ -> Control.Concurrent.Fiber.Internal.Fiber a_a6PQ
[GblId, Arity=2, Caf=NoCafRefs, Str=, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.$fApplicative_Fiber3
            eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fApplicative_Fiber [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Base.Applicative Control.Concurrent.Fiber.Internal.Fiber
[GblId[DFunId], Str=m, Unf=OtherCon []] =
    NO_CCS GHC.Base.D:Applicative! [Control.Concurrent.Fiber.Internal.$fFunctor_Fiber
                                    Control.Concurrent.Fiber.Internal.$fApplicative_Fiber3
                                    Control.Concurrent.Fiber.Internal.$fAlternative_Fiber3
                                    Control.Concurrent.Fiber.Internal.$fApplicative_Fiber2
                                    a3_rCFY];
Control.Concurrent.Fiber.Internal.$fAlternative_Fiber [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Base.Alternative Control.Concurrent.Fiber.Internal.Fiber
[GblId[DFunId], Str=m, Unf=OtherCon []] =
    NO_CCS GHC.Base.D:Alternative! [Control.Concurrent.Fiber.Internal.$fApplicative_Fiber
                                    Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                    Control.Concurrent.Fiber.Internal.$fAlternative_Fiber5
                                    Control.Concurrent.Fiber.Internal.$fAlternative_Fiber4
                                    Control.Concurrent.Fiber.Internal.$fAlternative_Fiber1];
Control.Concurrent.Fiber.Internal.$fMonad_Fiber_$c>>=
  :: forall a_a6DM b_a6DN.
     Control.Concurrent.Fiber.Internal.Fiber a_a6DM
     -> (a_a6DM -> Control.Concurrent.Fiber.Internal.Fiber b_a6DN)
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6DN
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<C(S(SL)),U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B3 eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
            eta_B3 eta_B2 eta_B1;
a5_rCG3
  :: forall a1_a8A1.
     [GHC.Types.Char] -> Control.Concurrent.Fiber.Internal.Fiber a1_a8A1
[GblId, Arity=1, Str=<L,U>b, Unf=OtherCon []] =
    \r srt:SRT:[05 :-> GHC.Err.error] [eta_sD70]
        GHC.Err.error eta_sD70;
Control.Concurrent.Fiber.Internal.$fMonad_Fiber_$c>> [InlPrag=INLINE (sat-args=2)]
  :: forall a_a6CV b_a6CW.
     Control.Concurrent.Fiber.Internal.Fiber a_a6CV
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6CW
     -> Control.Concurrent.Fiber.Internal.Fiber b_a6CW
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    \r srt:SRT:[r4VC :-> Control.Concurrent.Fiber.Internal.$fMonad_Fiber] [eta_sD71
                                                                           eta1_sD72]
        let {
          sat_sD74 [Occ=Once]
            :: a6_a6CV -> Control.Concurrent.Fiber.Internal.Fiber b_a6CW
          [LclId, Str=] =
              \r srt:SRT:[] [ds_sD73] eta1_sD72;
        } in 
          GHC.Base.>>=
              Control.Concurrent.Fiber.Internal.$fMonad_Fiber eta_sD71 sat_sD74;
Control.Concurrent.Fiber.Internal.$fMonad_Fiber [InlPrag=[ALWAYS] CONLIKE,
                                                 Occ=LoopBreaker!]
  :: GHC.Base.Monad Control.Concurrent.Fiber.Internal.Fiber
[GblId[DFunId], Str=m, Unf=OtherCon []] =
    NO_CCS GHC.Base.D:Monad! [Control.Concurrent.Fiber.Internal.$fApplicative_Fiber
                              Control.Concurrent.Fiber.Internal.$fMonad_Fiber1
                              Control.Concurrent.Fiber.Internal.$fMonad_Fiber_$c>>
                              Control.Concurrent.Fiber.Internal.$fApplicative_Fiber3
                              a5_rCG3];
Control.Concurrent.Fiber.Internal.$fMonadIO_Fiber_$cliftIO
  :: forall a_a6FO.
     GHC.Types.IO a_a6FO
     -> Control.Concurrent.Fiber.Internal.Fiber a_a6FO
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.$fMonadIO_Fiber1 eta_B1;
Control.Concurrent.Fiber.Internal.$fMonadIO_Fiber [InlPrag=[ALWAYS] CONLIKE]
  :: Control.Monad.IO.Class.MonadIO
       Control.Concurrent.Fiber.Internal.Fiber
[GblId[DFunId], Str=m, Unf=OtherCon []] =
    NO_CCS Control.Monad.IO.Class.D:MonadIO! [Control.Concurrent.Fiber.Internal.$fMonad_Fiber
                                              Control.Concurrent.Fiber.Internal.$fMonadIO_Fiber1];
Control.Concurrent.Fiber.Internal.$fShow_Empty_$cshowList
  :: [Control.Concurrent.Fiber.Internal.Empty] -> GHC.Show.ShowS
[GblId, Arity=2, Str=, Unf=OtherCon []] =
    \r srt:SRT:[rCEG :-> Control.Concurrent.Fiber.Internal.$fShow_Empty1] [eta_B2
                                                                           eta_B1]
        GHC.Show.showList__
            Control.Concurrent.Fiber.Internal.$fShow_Empty1 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.$fException_Empty_$cshow
  :: Control.Concurrent.Fiber.Internal.Empty -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*H>, Unf=OtherCon []] =
    \r srt:SRT:[rCEB :-> Control.Concurrent.Fiber.Internal.$fException_Empty1] [x_sD75]
        case x_sD75 of _ [Occ=Dead] {
          Control.Concurrent.Fiber.Internal.Empty ->
              Control.Concurrent.Fiber.Internal.$fException_Empty1;
        };
Control.Concurrent.Fiber.Internal.$fException_Empty_$cdisplayException
  :: Control.Concurrent.Fiber.Internal.Empty -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*H>, Unf=OtherCon []] =
    \r srt:SRT:[rCEA :-> Control.Concurrent.Fiber.Internal.$fException_Empty_$cshow] [eta_B1]
        Control.Concurrent.Fiber.Internal.$fException_Empty_$cshow eta_B1;
Control.Concurrent.Fiber.Internal.$fShow_Empty_$cshowsPrec
  :: GHC.Types.Int
     -> Control.Concurrent.Fiber.Internal.Empty -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*H><L,1*U>, Unf=OtherCon []] =
    \r srt:SRT:[rCEB :-> Control.Concurrent.Fiber.Internal.$fException_Empty1] [ds_sD77
                                                                                ds1_sD78
                                                                                eta_sD79]
        case ds1_sD78 of _ [Occ=Dead] {
          Control.Concurrent.Fiber.Internal.Empty ->
              GHC.Base.++
                  Control.Concurrent.Fiber.Internal.$fException_Empty1 eta_sD79;
        };
Control.Concurrent.Fiber.Internal.$fShow_Empty [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Show.Show Control.Concurrent.Fiber.Internal.Empty
[GblId[DFunId], Str=m, Unf=OtherCon []] =
    NO_CCS GHC.Show.D:Show! [Control.Concurrent.Fiber.Internal.$fShow_Empty_$cshowsPrec
                             Control.Concurrent.Fiber.Internal.$fException_Empty_$cshow
                             Control.Concurrent.Fiber.Internal.$fShow_Empty_$cshowList];
Control.Concurrent.Fiber.Internal.$fException_Empty [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Exception.Exception Control.Concurrent.Fiber.Internal.Empty
[GblId[DFunId], Str=m, Unf=OtherCon []] =
    NO_CCS GHC.Exception.D:Exception! [Control.Concurrent.Fiber.Internal.$fException_Empty4
                                       Control.Concurrent.Fiber.Internal.$fShow_Empty
                                       Control.Concurrent.Fiber.Internal.$fException_Empty_$ctoException
                                       Control.Concurrent.Fiber.Internal.$fException_Empty_$cfromException
                                       Control.Concurrent.Fiber.Internal.$fException_Empty_$cshow];
Control.Concurrent.Fiber.Internal.$fException_Empty_$ctoException [Occ=LoopBreaker]
  :: Control.Concurrent.Fiber.Internal.Empty
     -> GHC.Exception.SomeException
[GblId, Arity=1, Str=, Unf=OtherCon []] =
    \r srt:SRT:[r4WM :-> Control.Concurrent.Fiber.Internal.$fException_Empty] [eta_B1]
        GHC.Exception.SomeException [Control.Concurrent.Fiber.Internal.$fException_Empty
                                     eta_B1];
Control.Concurrent.Fiber.Internal.async_go [Occ=LoopBreaker]
  :: forall s_a4IC.
     GHC.Prim.Any -> GHC.Prim.State# s_a4IC -> GHC.Prim.State# s_a4IC
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [a6_sD7B s1_sD7C]
        case
            __primcall  eta.fibers.PrimOps.popContStack [s1_sD7C]
        of
        _ [Occ=Dead]
        { (#,,#) ipv_sD7F [Occ=Once*]
                 ipv1_sD7G [Occ=Once!]
                 ipv2_sD7H [Occ=Once] ->
              case ipv1_sD7G of _ [Occ=Dead] {
                __DEFAULT -> ipv_sD7F;
                1 ->
                    case ipv2_sD7H a6_sD7B of fa_sD7J [Dmd=<S,U>] {
                      __DEFAULT ->
                          case
                              __primcall  eta.fibers.PrimOps.setCurrentC [fa_sD7J ipv_sD7F]
                          of
                          s2_sD7L [OS=OneShot]
                          { __DEFAULT ->
                                case fa_sD7J s2_sD7L of _ [Occ=Dead] {
                                  (#,#) ipv3_sD7N [Occ=Once] ipv4_sD7O [Occ=Once] ->
                                      Control.Concurrent.Fiber.Internal.async_go
                                          ipv4_sD7O ipv3_sD7N;
                                };
                          };
                    };
              };
        };
Control.Concurrent.Fiber.Internal.resumeFiber1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [s_sD7P]
        case
            __primcall  eta.fibers.PrimOps.getCurrentC [s_sD7P]
        of
        _ [Occ=Dead]
        { (#,#) ipv_sD7S [Occ=Once] ipv1_sD7T [Occ=Once] ->
              case ipv1_sD7T ipv_sD7S of _ [Occ=Dead] {
                (#,#) ipv2_sD7V [Occ=Once] ipv3_sD7W [Occ=Once] ->
                    case
                        Control.Concurrent.Fiber.Internal.async_go ipv3_sD7W ipv2_sD7V
                    of
                    wild_sD7X [OS=OneShot]
                    { __DEFAULT -> (#,#) [wild_sD7X GHC.Tuple.()];
                    };
              };
        };
Control.Concurrent.Fiber.Internal.resumeFiber
  :: Control.Concurrent.Fiber.Internal.Fiber ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.resumeFiber1 eta_B1;
Control.Concurrent.Fiber.Internal.async3
  :: forall a_a6FB.
     a_a6FB
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[] [ev_sD7Y s_sD7Z]
        case
            __primcall  eta.fibers.PrimOps.setEventC [ev_sD7Y s_sD7Z]
        of
        s1_sD81 [OS=OneShot]
        { __DEFAULT ->
              case
                  __primcall  eta.fibers.PrimOps.getCurrentC [s1_sD81]
              of
              _ [Occ=Dead]
              { (#,#) ipv_sD84 [Occ=Once] ipv1_sD85 [Occ=Once] ->
                    case ipv1_sD85 ipv_sD84 of _ [Occ=Dead] {
                      (#,#) ipv2_sD87 [Occ=Once] ipv3_sD88 [Occ=Once] ->
                          case
                              Control.Concurrent.Fiber.Internal.async_go ipv3_sD88 ipv2_sD87
                          of
                          wild_sD89 [OS=OneShot]
                          { __DEFAULT -> (#,#) [wild_sD89 GHC.Tuple.()];
                          };
                    };
              };
        };
Control.Concurrent.Fiber.Internal.$wa [InlPrag=[0]]
  :: forall eventdata_a60J response_a60K.
     ((eventdata_a60J -> GHC.Types.IO response_a60K) -> GHC.Types.IO ())
     -> GHC.Types.IO response_a60K
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, eventdata_a60J #)
[GblId,
 Arity=3,
 Str=<L,1*C1(C1(U(U,A)))><L,C(U)><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [w_sD8A
                                                                                  w1_sD8B
                                                                                  w2_sD8C]
        case
            __primcall  eta.fibers.PrimOps.getEventCC [w2_sD8C]
        of
        _ [Occ=Dead]
        { (#,,#) ipv_sD8F [Occ=Once*]
                 ipv1_sD8G [Occ=Once!]
                 ipv2_sD8H [Occ=Once] ->
              case ipv1_sD8G of _ [Occ=Dead] {
                __DEFAULT ->
                    case
                        __primcall  eta.fibers.PrimOps.topStackC [ipv_sD8F]
                    of
                    _ [Occ=Dead]
                    { (#,#) ipv3_sD8L [Occ=Once] ipv4_sD8M [Occ=OnceL] ->
                          case
                              __primcall  eta.fibers.PrimOps.getStackC [ipv3_sD8L]
                          of
                          _ [Occ=Dead]
                          { (#,#) ipv5_sD8P [Occ=Once] ipv6_sD8Q [Occ=OnceL] ->
                                case
                                    __primcall  eta.fibers.PrimOps.getCurrentC [ipv5_sD8P]
                                of
                                _ [Occ=Dead]
                                { (#,#) ipv7_sD8T [Occ=Once] ipv8_sD8U [Occ=OnceL] ->
                                      let {
                                        sat_sD97 [Occ=Once]
                                          :: eventdata_a60J -> GHC.Types.IO response_a60K
                                        [LclId, Str=] =
                                            \r srt:SRT:[] [dat_sD8V s_sD8W]
                                                let {
                                                  sat_sD93 [Occ=Once]
                                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             () #)
                                                  [LclId, Str=] =
                                                      \r srt:SRT:[] [s1_sD8X]
                                                          let {
                                                            sat_sD92 [Occ=Once] :: GHC.Prim.Any
                                                            [LclId, Str=] =
                                                                \r srt:SRT:[] [s2_sD8Z]
                                                                    case
                                                                        __primcall  eta.fibers.PrimOps.setContStack [ipv4_sD8M
                                                                                                                     ipv6_sD8Q
                                                                                                                     ipv8_sD8U
                                                                                                                     s2_sD8Z]
                                                                    of
                                                                    s3_sD91 [OS=OneShot]
                                                                    { __DEFAULT ->
                                                                          Control.Concurrent.Fiber.Internal.async3
                                                                              dat_sD8V s3_sD91;
                                                                    };
                                                          } in 
                                                            __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sD92
                                                                                                             Control.Concurrent.Fiber.Internal.async2
                                                                                                             s1_sD8X];
                                                } in 
                                                  case fork# [sat_sD93 s_sD8W] of _ [Occ=Dead] {
                                                    (#,#) ipv9_sD95 [Occ=Once] _ [Occ=Dead] ->
                                                        w1_sD8B ipv9_sD95;
                                                  };
                                      } in 
                                        case w_sD8A sat_sD97 ipv7_sD8T of _ [Occ=Dead] {
                                          (#,#) ipv9_sD99 [Occ=Once] _ [Occ=Dead] ->
                                              Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                  ipv9_sD99;
                                        };
                                };
                          };
                    };
                1 ->
                    case
                        __primcall  eta.fibers.PrimOps.delEventCC [ipv_sD8F]
                    of
                    s1_sD9C [OS=OneShot]
                    { __DEFAULT -> (#,#) [s1_sD9C ipv2_sD8H];
                    };
              };
        };
Control.Concurrent.Fiber.Internal.react1 [InlPrag=INLINE[0]]
  :: forall eventdata_a60J response_a60K.
     Data.Typeable.Internal.Typeable eventdata_a60J =>
     ((eventdata_a60J -> GHC.Types.IO response_a60K) -> GHC.Types.IO ())
     -> GHC.Types.IO response_a60K
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, eventdata_a60J #)
[GblId,
 Arity=4,
 Str=<L,A><L,1*C1(C1(U(U,A)))><L,C(U)><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCFO :-> Control.Concurrent.Fiber.Internal.$wa] [w_sD9D
                                                                 w1_sD9E
                                                                 w2_sD9F
                                                                 w3_sD9G]
        Control.Concurrent.Fiber.Internal.$wa w1_sD9E w2_sD9F w3_sD9G;
Control.Concurrent.Fiber.Internal.react
  :: forall eventdata_a48X response_a48Y.
     Data.Typeable.Internal.Typeable eventdata_a48X =>
     ((eventdata_a48X -> GHC.Types.IO response_a48Y) -> GHC.Types.IO ())
     -> GHC.Types.IO response_a48Y
     -> Control.Concurrent.Fiber.Internal.Fiber eventdata_a48X
[GblId,
 Arity=4,
 Str=<L,A><L,1*C1(C1(U(U,A)))><L,C(U)><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[rCFN :-> Control.Concurrent.Fiber.Internal.react1] [eta_B4
                                                                    eta_B3
                                                                    eta_B2
                                                                    eta_B1]
        Control.Concurrent.Fiber.Internal.react1
            eta_B4 eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.forkCont1
  :: forall a_X6QF.
     GHC.Types.IO a_X6QF
     -> GHC.Prim.Int#
     -> GHC.Prim.Object# GHC.Types.Object
     -> GHC.Prim.Any
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,C(U(U,U))><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [io_sD9H top_sD9I stack_sD9J curr_sD9K s_sD9L]
        let {
          sat_sD9V [Occ=Once]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Str=] =
              \r srt:SRT:[] [s1_sD9M]
                  let {
                    sat_sD9U [Occ=Once] :: GHC.Prim.Any
                    [LclId, Str=] =
                        \r srt:SRT:[] [s2_sD9O]
                            case
                                __primcall  eta.fibers.PrimOps.setContStack [top_sD9I
                                                                             stack_sD9J
                                                                             curr_sD9K
                                                                             s2_sD9O]
                            of
                            s3_sD9Q [OS=OneShot]
                            { __DEFAULT ->
                                  case io_sD9H s3_sD9Q of _ [Occ=Dead] {
                                    (#,#) ipv_sD9S [Occ=Once] ipv1_sD9T [Occ=Once] ->
                                        Control.Concurrent.Fiber.Internal.async3 ipv1_sD9T ipv_sD9S;
                                  };
                            };
                  } in 
                    __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sD9U
                                                                     Control.Concurrent.Fiber.Internal.async2
                                                                     s1_sD9M];
        } in 
          case fork# [sat_sD9V s_sD9L] of _ [Occ=Dead] {
            (#,#) ipv_sD9X [Occ=Once] _ [Occ=Dead] ->
                (#,#) [ipv_sD9X GHC.Tuple.()];
          };
Control.Concurrent.Fiber.Internal.async1
  :: forall a_a600.
     GHC.Types.IO a_a600
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a600 #)
[GblId, Arity=2, Str=<L,C(U(U,U))><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCDW :-> Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6] [io_sD9Z
                                                                                  eta_sDA0]
        case
            __primcall  eta.fibers.PrimOps.getEventCC [eta_sDA0]
        of
        _ [Occ=Dead]
        { (#,,#) ipv_sDA3 [Occ=Once*]
                 ipv1_sDA4 [Occ=Once!]
                 ipv2_sDA5 [Occ=Once] ->
              case ipv1_sDA4 of _ [Occ=Dead] {
                __DEFAULT ->
                    case
                        __primcall  eta.fibers.PrimOps.topStackC [ipv_sDA3]
                    of
                    _ [Occ=Dead]
                    { (#,#) ipv3_sDA9 [Occ=Once] ipv4_sDAA [Occ=Once] ->
                          case
                              __primcall  eta.fibers.PrimOps.getStackC [ipv3_sDA9]
                          of
                          _ [Occ=Dead]
                          { (#,#) ipv5_sDAD [Occ=Once] ipv6_sDAE [Occ=Once] ->
                                case
                                    __primcall  eta.fibers.PrimOps.getCurrentC [ipv5_sDAD]
                                of
                                _ [Occ=Dead]
                                { (#,#) ipv7_sDAH [Occ=Once] ipv8_sDAI [Occ=Once] ->
                                      let {
                                        sat_sDAS [Occ=Once]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                        [LclId, Str=] =
                                            \r srt:SRT:[] [s_sDAJ]
                                                let {
                                                  sat_sDAR [Occ=Once] :: GHC.Prim.Any
                                                  [LclId, Str=] =
                                                      \r srt:SRT:[] [s1_sDAL]
                                                          case
                                                              __primcall  eta.fibers.PrimOps.setContStack [ipv4_sDAA
                                                                                                           ipv6_sDAE
                                                                                                           ipv8_sDAI
                                                                                                           s1_sDAL]
                                                          of
                                                          s2_sDAN [OS=OneShot]
                                                          { __DEFAULT ->
                                                                case
                                                                    io_sD9Z s2_sDAN
                                                                of
                                                                _ [Occ=Dead]
                                                                { (#,#) ipv9_sDAP [Occ=Once]
                                                                        ipv10_sDAQ [Occ=Once] ->
                                                                      Control.Concurrent.Fiber.Internal.async3
                                                                          ipv10_sDAQ ipv9_sDAP;
                                                                };
                                                          };
                                                } in 
                                                  __primcall  eta.fibers.PrimOps.alternativeFiber [sat_sDAR
                                                                                                   Control.Concurrent.Fiber.Internal.async2
                                                                                                   s_sDAJ];
                                      } in 
                                        case fork# [sat_sDAS ipv7_sDAH] of _ [Occ=Dead] {
                                          (#,#) ipv9_sDAU [Occ=Once] _ [Occ=Dead] ->
                                              Control.Concurrent.Fiber.Internal.$fAlternative_Fiber6
                                                  ipv9_sDAU;
                                        };
                                };
                          };
                    };
                1 ->
                    case
                        __primcall  eta.fibers.PrimOps.delEventCC [ipv_sDA3]
                    of
                    s1_sDAX [OS=OneShot]
                    { __DEFAULT -> (#,#) [s1_sDAX ipv2_sDA5];
                    };
              };
        };
Control.Concurrent.Fiber.Internal.async
  :: forall a_a48W.
     GHC.Types.IO a_a48W
     -> Control.Concurrent.Fiber.Internal.Fiber a_a48W
[GblId, Arity=2, Str=<L,C(U(U,U))><S,U>, Unf=OtherCon []] =
    \r srt:SRT:[rCF6 :-> Control.Concurrent.Fiber.Internal.async1] [eta_B2
                                                                    eta_B1]
        Control.Concurrent.Fiber.Internal.async1 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.forkCont
  :: forall a_a6F9.
     GHC.Types.IO a_a6F9
     -> GHC.Prim.Int#
     -> GHC.Prim.Object# GHC.Types.Object
     -> GHC.Prim.Any
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,C(U(U,U))><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Control.Concurrent.Fiber.Internal.forkCont1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;
Control.Concurrent.Fiber.Internal.Obj
  :: GHC.Prim.Object# GHC.Types.Object
     -> Control.Concurrent.Fiber.Internal.Obj
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=OtherCon []] =
    \r srt:SRT:[] [eta_B1]
        Control.Concurrent.Fiber.Internal.Obj [eta_B1];
Control.Concurrent.Fiber.Internal.Empty
  :: Control.Concurrent.Fiber.Internal.Empty
[GblId[DataCon], Caf=NoCafRefs, Str=, Unf=OtherCon []] =
    NO_CCS Control.Concurrent.Fiber.Internal.Empty! [];

